{
    "contractName": "StrategyVHMaximizer",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "_wantToken",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_vaultHealerAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_masterchefAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_tacticAddress",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_pid",
                    "type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IUniRouter02",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "slippageFactor",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint16",
                            "name": "tolerance",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint64",
                            "name": "minBlocksBetweenEarns",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint88",
                            "name": "dust",
                            "type": "uint88"
                        },
                        {
                            "internalType": "bool",
                            "name": "feeOnTransfer",
                            "type": "bool"
                        },
                        {
                            "internalType": "contract Magnetite",
                            "name": "magnetite",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct VaultSettings",
                    "name": "_settings",
                    "type": "tuple"
                },
                {
                    "internalType": "contract IERC20[]",
                    "name": "_earned",
                    "type": "address[]"
                },
                {
                    "internalType": "address",
                    "name": "_crystlCompounder",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "withdraw",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "earn",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "reward",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "burn",
                            "type": "tuple"
                        }
                    ],
                    "indexed": false,
                    "internalType": "struct VaultFees",
                    "name": "_fees",
                    "type": "tuple"
                }
            ],
            "name": "SetFees",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "contract IUniRouter02",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "slippageFactor",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint16",
                            "name": "tolerance",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint64",
                            "name": "minBlocksBetweenEarns",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint88",
                            "name": "dust",
                            "type": "uint88"
                        },
                        {
                            "internalType": "bool",
                            "name": "feeOnTransfer",
                            "type": "bool"
                        },
                        {
                            "internalType": "contract Magnetite",
                            "name": "magnetite",
                            "type": "address"
                        }
                    ],
                    "indexed": false,
                    "internalType": "struct VaultSettings",
                    "name": "_settings",
                    "type": "tuple"
                }
            ],
            "name": "SetSettings",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "CheckIsMaximizer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_wantAmt",
                    "type": "uint256"
                }
            ],
            "name": "UpdatePoolAndRewarddebtOnDeposit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_wantAmt",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_userWant",
                    "type": "uint256"
                }
            ],
            "name": "UpdatePoolAndWithdrawCrystlOnWithdrawal",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "accRewardTokensPerShare",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "burnedAmount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "buyBackRate",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "crystlCompounder",
            "outputs": [
                {
                    "internalType": "contract IStrategy",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_wantAmt",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_sharesTotal",
                    "type": "uint256"
                }
            ],
            "name": "deposit",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "sharesAdded",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                }
            ],
            "name": "earn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "earned",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_user",
                    "type": "address"
                }
            ],
            "name": "getRewardDebt",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_user",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "increaseRewardDebt",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "isMaximizer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "lastEarnBlock",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "lpToken",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "masterchef",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onERC1155BatchReceived",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "onERC1155Received",
            "outputs": [
                {
                    "internalType": "bytes4",
                    "name": "",
                    "type": "bytes4"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "panic",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "panicLockExpiry",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "pid",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "rewardDebt",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "withdraw",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "earn",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "reward",
                            "type": "tuple"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "token",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "receiver",
                                    "type": "address"
                                },
                                {
                                    "internalType": "uint16",
                                    "name": "rate",
                                    "type": "uint16"
                                }
                            ],
                            "internalType": "struct VaultFee",
                            "name": "burn",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct VaultFees",
                    "name": "_fees",
                    "type": "tuple"
                }
            ],
            "name": "setFees",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "contract IUniRouter02",
                            "name": "router",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "slippageFactor",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint16",
                            "name": "tolerance",
                            "type": "uint16"
                        },
                        {
                            "internalType": "uint64",
                            "name": "minBlocksBetweenEarns",
                            "type": "uint64"
                        },
                        {
                            "internalType": "uint88",
                            "name": "dust",
                            "type": "uint88"
                        },
                        {
                            "internalType": "bool",
                            "name": "feeOnTransfer",
                            "type": "bool"
                        },
                        {
                            "internalType": "contract Magnetite",
                            "name": "magnetite",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct VaultSettings",
                    "name": "_settings",
                    "type": "tuple"
                }
            ],
            "name": "setSettings",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_stakingPoolAddress",
                    "type": "address"
                }
            ],
            "name": "setStakingPoolAddress",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "settings",
            "outputs": [
                {
                    "internalType": "contract IUniRouter02",
                    "name": "router",
                    "type": "address"
                },
                {
                    "internalType": "uint16",
                    "name": "slippageFactor",
                    "type": "uint16"
                },
                {
                    "internalType": "uint16",
                    "name": "tolerance",
                    "type": "uint16"
                },
                {
                    "internalType": "uint64",
                    "name": "minBlocksBetweenEarns",
                    "type": "uint64"
                },
                {
                    "internalType": "uint88",
                    "name": "dust",
                    "type": "uint88"
                },
                {
                    "internalType": "bool",
                    "name": "feeOnTransfer",
                    "type": "bool"
                },
                {
                    "internalType": "contract Magnetite",
                    "name": "magnetite",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "sharesTotal",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "stakingPoolAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "tactic",
            "outputs": [
                {
                    "internalType": "contract ITactic",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "tolerance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpanic",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "vaultFees",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "rate",
                            "type": "uint16"
                        }
                    ],
                    "internalType": "struct VaultFee",
                    "name": "withdraw",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "rate",
                            "type": "uint16"
                        }
                    ],
                    "internalType": "struct VaultFee",
                    "name": "earn",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "rate",
                            "type": "uint16"
                        }
                    ],
                    "internalType": "struct VaultFee",
                    "name": "reward",
                    "type": "tuple"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "token",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "receiver",
                            "type": "address"
                        },
                        {
                            "internalType": "uint16",
                            "name": "rate",
                            "type": "uint16"
                        }
                    ],
                    "internalType": "struct VaultFee",
                    "name": "burn",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "vaultHealer",
            "outputs": [
                {
                    "internalType": "contract VaultHealer",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "vaultSharesTotal",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "vaultStats",
            "outputs": [
                {
                    "internalType": "uint128",
                    "name": "totalEarned",
                    "type": "uint128"
                },
                {
                    "internalType": "uint128",
                    "name": "totalBurned",
                    "type": "uint128"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wantLockedTotal",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "wantToken",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_wantAmt",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_userShares",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_sharesTotal",
                    "type": "uint256"
                }
            ],
            "name": "withdraw",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "sharesRemoved",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "wantAmt",
                    "type": "uint256"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_wantToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vaultHealerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_masterchefAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tacticAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IUniRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"slippageFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tolerance\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"minBlocksBetweenEarns\",\"type\":\"uint64\"},{\"internalType\":\"uint88\",\"name\":\"dust\",\"type\":\"uint88\"},{\"internalType\":\"bool\",\"name\":\"feeOnTransfer\",\"type\":\"bool\"},{\"internalType\":\"contract Magnetite\",\"name\":\"magnetite\",\"type\":\"address\"}],\"internalType\":\"struct VaultSettings\",\"name\":\"_settings\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_earned\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_crystlCompounder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"withdraw\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"earn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"reward\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"burn\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct VaultFees\",\"name\":\"_fees\",\"type\":\"tuple\"}],\"name\":\"SetFees\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"slippageFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tolerance\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"minBlocksBetweenEarns\",\"type\":\"uint64\"},{\"internalType\":\"uint88\",\"name\":\"dust\",\"type\":\"uint88\"},{\"internalType\":\"bool\",\"name\":\"feeOnTransfer\",\"type\":\"bool\"},{\"internalType\":\"contract Magnetite\",\"name\":\"magnetite\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct VaultSettings\",\"name\":\"_settings\",\"type\":\"tuple\"}],\"name\":\"SetSettings\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CheckIsMaximizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"}],\"name\":\"UpdatePoolAndRewarddebtOnDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userWant\",\"type\":\"uint256\"}],\"name\":\"UpdatePoolAndWithdrawCrystlOnWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accRewardTokensPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyBackRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crystlCompounder\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sharesTotal\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesAdded\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"earn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseRewardDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMaximizer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEarnBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterchef\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"panicLockExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"withdraw\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"earn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"reward\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"burn\",\"type\":\"tuple\"}],\"internalType\":\"struct VaultFees\",\"name\":\"_fees\",\"type\":\"tuple\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IUniRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"slippageFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tolerance\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"minBlocksBetweenEarns\",\"type\":\"uint64\"},{\"internalType\":\"uint88\",\"name\":\"dust\",\"type\":\"uint88\"},{\"internalType\":\"bool\",\"name\":\"feeOnTransfer\",\"type\":\"bool\"},{\"internalType\":\"contract Magnetite\",\"name\":\"magnetite\",\"type\":\"address\"}],\"internalType\":\"struct VaultSettings\",\"name\":\"_settings\",\"type\":\"tuple\"}],\"name\":\"setSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingPoolAddress\",\"type\":\"address\"}],\"name\":\"setStakingPoolAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract IUniRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"slippageFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tolerance\",\"type\":\"uint16\"},{\"internalType\":\"uint64\",\"name\":\"minBlocksBetweenEarns\",\"type\":\"uint64\"},{\"internalType\":\"uint88\",\"name\":\"dust\",\"type\":\"uint88\"},{\"internalType\":\"bool\",\"name\":\"feeOnTransfer\",\"type\":\"bool\"},{\"internalType\":\"contract Magnetite\",\"name\":\"magnetite\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tactic\",\"outputs\":[{\"internalType\":\"contract ITactic\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpanic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultFees\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"withdraw\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"earn\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"reward\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"rate\",\"type\":\"uint16\"}],\"internalType\":\"struct VaultFee\",\"name\":\"burn\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultHealer\",\"outputs\":[{\"internalType\":\"contract VaultHealer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultSharesTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultStats\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalEarned\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalBurned\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantLockedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wantToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_wantAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_userShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sharesTotal\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sharesRemoved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wantAmt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/StrategyVHMaximizer.sol\":\"StrategyVHMaximizer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/BaseStrategy.sol\":{\"keccak256\":\"0x9196e3eb9a10945c18c7a3892a83fa63ced8aa5c50b825fc7a6b9ea3945eddc1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f42d0b2e7859df9210b721c3575bc2f1e9db15d3af7659c9ddcbfbab902b31d\",\"dweb:/ipfs/QmZw8cDqVXU2vCzgfFW3uyqvJtqN5ER2cz3JoyuYy1QbFB\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/BaseStrategySwapLogic.sol\":{\"keccak256\":\"0xdbaf8a1c1fb3c9319d0d54712b513d9ad8034129d3105e9696816117321b208c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://32d3d9863516b0e2cb4829ffbb08f5d634179568e7c619e78ce650ff9e63fea1\",\"dweb:/ipfs/QmPxDuhqJebS9VQwUKoaBn8iW5m1A83iaVJCj1RXe5fek8\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/BaseStrategyVaultHealer.sol\":{\"keccak256\":\"0x82b628b4e97873aae57d2e761c1dc4a18617f3cdb27a9061b54e10673c90f3e1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d9830f7e6bd1547abc740da392a6e077377e1d210d7a72cffb404f9150923b8c\",\"dweb:/ipfs/QmXMo8RELHMUhU8RCZ3MavdUB1XfoeUYWRj3JFkvMsDTef\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/Magnetite.sol\":{\"keccak256\":\"0x30a9ea722238168ed70da70e65c2a718fe1367815b460d34432a505dcd8cdac5\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a212ff85b5aa344fb8a3b68eae39f71eaf28f6516283379b309e13f0251e5cef\",\"dweb:/ipfs/QmNb8EMxagZmpdvwmT4SnddZc7GuG7GJRng2UCgwJg1mRd\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/StrategyVHMaximizer.sol\":{\"keccak256\":\"0x7f77f50d8a6d3dc54b22dcf1b31f3de3da6acf61eb7b89388f8c3a0cb85950c7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://877f3f0ab77a1f0c35745bfbdb3f072858ebf8b39dfb51aa145f3dd4cc3755e1\",\"dweb:/ipfs/QmSHvFLcXf95w7zq33j6H9pY3W33JZijKHWVnrBuZudEvV\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/VaultHealer.sol\":{\"keccak256\":\"0x93d0aac0c7c8a70861e47693f6df18c78aa022987405998cf2dbe36fcc5a2eba\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d44a17a2d6e81be019737b4c0a4483720b98545e65efda2e9266ce347e800af2\",\"dweb:/ipfs/QmbKi6nQSn84SeV3wfiuuRzaLeLjScJoEGM2XkuRnxFZMp\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/VaultHealerBase.sol\":{\"keccak256\":\"0x884eaec800c2c84c2ac81396ab847f02b4adc229247e81f64e769cb0de802d62\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ecc056edd1b3a9093da456eddd2c3e5a1fa7fbf9ea438a8dab3808e05caf682b\",\"dweb:/ipfs/QmcGQCEutTUyAvrqQi3ypWdqP1V135LwDa9g3rSgnNck4B\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/VaultHealerGate.sol\":{\"keccak256\":\"0xf6f8fc4f99970fa267cc80688315db101e661e0d81ba2656844d610f033be501\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://97b13c561932d5cf696ff33ba8f0f4f718a4fabba68b046aedebfb2de789a202\",\"dweb:/ipfs/QmVTfmFzdaaXLoQ7ZswbmvmRaehndgWfNga2dWXJpVYowX\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/FullMath.sol\":{\"keccak256\":\"0x73521697e4dd8460de822e2baa0449a3dce1c08ce64aa300748feba3bea0620a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ab8eea65eeb9533aadb019cd44515a2cb3e8a446c0b341b88757e34fae0a8b6\",\"dweb:/ipfs/QmNiNXbEe9eWfRxnb3f6w2utbvgV6BWeeLE1JGV4NAM8ss\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/IStakingPool.sol\":{\"keccak256\":\"0xe11f683fc4b69210f21ae9af6d53c205acd90b2ffcac8be7e268c80babf48b67\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://be28624e620c6680a95625173f06e6594d031815ec3bfcf1fa6253a3c5dede91\",\"dweb:/ipfs/QmZSfCe3SToRwZXvuqsVAdHYaa4iZM4RTGEjFkwqNqynGf\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/IStrategy.sol\":{\"keccak256\":\"0xa43f529c019e65e40015a890d1875b9c69ce6ed5a12bd990a6f74056e19888c3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81ad8cde9e4ae7434d5d17c223b6022f291fe2de910a4978dbe5aaf0b1ff3da2\",\"dweb:/ipfs/QmXyESHcatjb1BjZxiNK2tihz9F4NeEXYRtyp1c94eZCGj\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/ITactic.sol\":{\"keccak256\":\"0x7d011f7333816d35d387922bc2a3343b17275d2a3c8500705302a5d35ed14c44\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8a99e16f5d7c75b074f2b8c31ce2d1d9921fa6bb60a5595c817ae13b057d2f14\",\"dweb:/ipfs/QmYNhWZUbi8rrLDXKrUu1jiof52yJvfP9y8DtvAKD8NkMX\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/IUniRouter.sol\":{\"keccak256\":\"0x4e177d4f98e134cef3cb542eeffc14e97f5be6e2cfb9191164239710732c20aa\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2dd5eb86010d9127c9e44efae8f9d4d03b86314117dc1baa1e891565d99ef6c7\",\"dweb:/ipfs/QmNNWcvNW7BdXsu6GsjgGrEMXnzbYQuyNKFzNXSMDBEiXN\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/LibMagnetite.sol\":{\"keccak256\":\"0x635e8a6202dd2f69ad0bb9f6cb2f4a02e045670e5f89215f14acfe97a8821668\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://032f1d5f12845c29813e291a80cc3f48ac4b33b3b48fd62c2cc61eb5408ba3e7\",\"dweb:/ipfs/QmNNpu3vonoZ1y2D3FepJh1vMtYmdjST6yGBHbbQUzD4gU\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/LibVaultConfig.sol\":{\"keccak256\":\"0x8501bb013949419c576a79732974571254cde89636cdea3a741da67d1c784528\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://68142668022d175fdffb8d76b5199868927a761a68da88143f370e92702b53d9\",\"dweb:/ipfs/QmUYnktApgr7fo8UJHrj2Us9M77Nvz1i7fQpvuefZZRcVZ\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/LibVaultSwaps.sol\":{\"keccak256\":\"0xd87b277f11a8c91196ed25265b4f7e33c72e4e50766aa7d41cd836bd33671e11\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f3516d4d2c9e666e4b75b064e3251935b2fef99ea9bdc94a61b8f98947c9e57e\",\"dweb:/ipfs/QmUSMJ8ZnCQAg4ezw3JjCiH5wcFgGZ9Uvp5SQ5gGacYuoe\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/PrismLibrary.sol\":{\"keccak256\":\"0xc4164caf36a1d31e7b80211e7a4be7eab828a213269ccdbcb5c4045a542ab64f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0ed58d040181a9084e4d1122c93ef40f4a6c22276d60a6e4c50f511613644c7e\",\"dweb:/ipfs/QmZUXMvcMkNevksBrjvoffV2MTSDXFVf1P5ynyiYq9rB2e\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xbda715785876dbfc675396b89ac45bb9f4cceb968133a8258924d163a700f0e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2345f1fbddd1fc344a50bdac7bcebf6e266398fed655c0df6b7940385a59a43\",\"dweb:/ipfs/Qmf6GX6ddVTySuct3AY4uDzj327i1cLZuPzWBfFX6oKZMS\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xfce1eb6398eae0e2b50251140866a70a3106193f101972c878bba1dbf44929ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0709c3f462b28b400f57db181254ad970967c3b49a8948ef5e05929b106ffe\",\"dweb:/ipfs/QmNe3sRmPKw1T7q7m733tk7tFKpi3jo9PCisDPMbjeg3kJ\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x7de6e64d4a8075e803a972cc77c4c91463e0c3777e4110eacfb5d4a71759b2fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b3b09ef36374c1c104ee896797dadf2e81466d2143b481d3f1ddc7d9f3873\",\"dweb:/ipfs/QmSWtqs28RHDezRWBbmEfqiPYwsGTKj44NRbuxvZ96cqMU\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0xbabdad0b4e2eaf7d0c756c901f34d6d823538a45a7848c362349634216148986\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80ac3129ad9448bc2bd1c2f602cc49a1e20ccbed23e4cea1413e096fff57f39b\",\"dweb:/ipfs/QmWhoHehFy2XWFWsXH2taWeEEwH8ZLiYFP86DpwSr5aqUL\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x6ba0564f6970414d1166ee83127b834bbe7dbf699241a3005eb7ae64a2211975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9784827a0575eab840a3b2d42900390724c79139063150955c95f5b730545669\",\"dweb:/ipfs/Qmergdvk1vDFSpXxZSXghPm5SxKBUqrqkZdYmsUSaMwaXK\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x4716e860c041e651d2f2486399ea5a49ec12289e91b2763991a2fa3a70772acf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80530019b488d859b57c411defccf2f5dbc6fba21f32f93b7f07be074097ff87\",\"dweb:/ipfs/QmdYDwbeJN4YZmPrzDG28AbHnvFLkx4GKMujEAtVEXtsJd\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x8c578d9e30c8f2bb7ac01d108766df87d42b73d4d3638f01d494a894fe7c1f4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f919596cc035c6a9192548a48f5e225ccd347140ed9af75fa73c36dc8b1ade7e\",\"dweb:/ipfs/QmUGc2vGhQC52usiwGaEjFHAzrtyJVRxNpWxFpdPBcfs5t\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/hardhat/console.sol\":{\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8cb8681076e765c214e0d51cac989325f6b98e315eaae06ee0cbd5a9f084763\",\"dweb:/ipfs/QmNWGHi4zmjxQTYN3NMGnJd49jBT5dE4bxTdWEaDuJrC6N\"]}},\"version\":1}",
    "bytecode": "610160604052436002553480156200001657600080fd5b50604051620048a6380380620048a68339810160408190526200003991620006ae565b8688838562000053816200045660201b620018921760201c565b805160008054602084015160408086015160608701516001600160401b0316600160c01b026001600160c01b0361ffff928316600160b01b02166001600160b01b0392909416600160a01b026001600160b01b03199095166001600160a01b03978816179490941716919091179190911790915560808301516001805460a086015160c08701519095166c01000000000000000000000000026001600160601b039515156b010000000000000000000000026001600160601b03199092166001600160581b0390941693909317179390931617909155517fc2c7ac08416765095e5e7b6fc1fb40fbb89d6d8261453c24cae5bc89748b2b4d90620001c890839081516001600160a01b03908116825260208084015161ffff90811691840191909152604080850151909116908301526060808401516001600160401b0316908301526080808401516001600160581b03169083015260a08381015115159083015260c092830151169181019190915260e00190565b60405180910390a1506001600160a01b03821660805260005b81518110801562000221575060006001600160a01b03168282815181106200020d576200020d6200081a565b60200260200101516001600160a01b031614155b156200028e578181815181106200023c576200023c6200081a565b6020026020010151600482600881106200025a576200025a6200081a565b0180546001600160a01b0319166001600160a01b039290921691909117905580620002858162000830565b915050620001e1565b8060a081815250506000836001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620002f5575060408051601f3d908101601f19168201909252620002f2918101906200085a565b60015b6200031e5750600c80546001600160a01b0319166001600160a01b0385161790556001620003d6565b80600c60000160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550846001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000387573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ad91906200085a565b600c60010180546001600160a01b0319166001600160a01b039290921691909117905550600290505b60c0525050506001600160a01b0390811660e0819052600180546001600160601b03166c010000000000000000000000009092029190911790559586166101005293851661012052505061014052601780546001600160a01b03191691909216179055505060188054600160a01b60ff60a01b1990911617905562000881565b80600001516001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015620004b7575060408051601f3d908101601f19168201909252620004b4918101906200085a565b60015b620004fa5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103937baba32b960911b60448201526064015b60405180910390fd5b506126de816020015161ffff161115620005575760405162461bcd60e51b815260206004820152601860248201527f5f736c697070616765466163746f7220746f6f206869676800000000000000006044820152606401620004f1565b50565b6001600160a01b03811681146200055757600080fd5b80516200057d816200055a565b919050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715620005bd57620005bd62000582565b60405290565b805161ffff811681146200057d57600080fd5b80516001600160581b03811681146200057d57600080fd5b805180151581146200057d57600080fd5b600082601f8301126200061157600080fd5b815160206001600160401b038083111562000630576200063062000582565b8260051b604051601f19603f8301168101818110848211171562000658576200065862000582565b6040529384528581018301938381019250878511156200067757600080fd5b83870191505b84821015620006a357815162000693816200055a565b835291830191908301906200067d565b979650505050505050565b600080600080600080600080888a036101c0811215620006cd57600080fd5b8951620006da816200055a565b60208b0151909950620006ed816200055a565b60408b015190985062000700816200055a565b60608b015190975062000713816200055a565b60808b0151909650945060e0609f19820112156200073057600080fd5b506200073b62000598565b60a08a01516200074b816200055a565b81526200075b60c08b01620005c3565b60208201526200076e60e08b01620005c3565b60408201526101008a01516001600160401b0380821682146200079057600080fd5b816060840152620007a56101208d01620005d6565b6080840152620007b96101408d01620005ee565b60a0840152620007cd6101608d0162000570565b60c08401526101808c015192955080831115620007e957600080fd5b5050620007f98b828c01620005ff565b9250506200080b6101a08a0162000570565b90509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200085357634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156200086d57600080fd5b81516200087a816200055a565b9392505050565b60805160a05160c05160e051610100516101205161014051613eb5620009f1600039600081816107170152818161081b01528181611e9101528181611fdf015281816122ec0152612cb40152600081816102cb0152818161084401528181611f1c015281816120650152818161236d0152612d39015260008181610770015281816107f301528181611e6001528181611fae015281816122bb01528181612c580152612c83015260008181610564015281816108c40152818161098001528181610a7b01528181610b2001528181610b9401528181610bcd01528181610c7201528181610e7f015281816111e50152818161125a015281816112ff01528181611353015281816115330152818161157c01528181611621015281816116d4015281816117790152818161184901528181611bc20152611c0401526000505060006119e701526000818161060c0152818161151101528181611a9701528181611e230152612c360152613eb56000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80636ff4ab8a11610146578063c0c5356a116100c3578063e06174e411610087578063e06174e414610654578063f106845414610712578063f23a6e6114610739578063f75c1d9e14610758578063fb1db2781461076b578063fdb5fefc1461079257600080fd5b8063c0c5356a146105e2578063c621fbc3146105f5578063d23e048014610607578063dce52dfa1461062e578063dfdce1641461064157600080fd5b80638456cb591161010a5780638456cb591461038657806396ae71f0146105865780639845db2f1461059a578063b9bafd93146105a3578063bc197c81146105b657600080fd5b80636ff4ab8a1461042757806372188e3f14610465578063762347591461052457806378ed5d1f1461054c5780637e2c5c191461055f57600080fd5b80633f4ba83a116101df57806350e15fdd116101a357806350e15fdd146103b957806352a49ba2146103d15780635873eb9b146103e45780635ad88a70146104045780635c975abb1461041757806365a5e30b1461041f57600080fd5b80633f4ba83a1461038657806342da4eb31461038e57806344a3955e146103965780634700d3051461039e5780634d6ed8c4146103a657600080fd5b80631c2b645b116102265780631c2b645b146102c65780631d47c6d914610305578063203d81c11461032e57806320e8c5651461036057806325b15a0c1461037357600080fd5b806301ffc9a71461026357806304c9d4901461028b5780630e442709146102a15780630fa4e01e146102aa578063178a8d07146102b3575b600080fd5b61027661027136600461308f565b6107a5565b60405190151581526020015b60405180910390f35b6102936107dc565b604051908152602001610282565b61029360195481565b61029360025481565b601554600160a01b900461ffff16610293565b6102ed7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610282565b6102936103133660046130ce565b6001600160a01b03166000908152601b602052604090205490565b61035e61033c3660046130ce565b601880546001600160a01b0319166001600160a01b0392909216919091179055565b005b61029361036e3660046130eb565b6108b7565b6018546102ed906001600160a01b031681565b61035e610a79565b610293610b60565b610293610b7c565b61035e610bcb565b6102ed6103b4366004613131565b610d02565b601654600160801b90046001600160801b0316610293565b61035e6103df36600461314a565b610d22565b6102936103f23660046130ce565b601b6020526000908152604090205481565b61035e61041236600461317f565b611041565b6102766111cd565b61035e611258565b601654610445906001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610282565b6040805160608082018352600e546001600160a01b039081168352600f5480821660208086019190915261ffff600160a01b928390048116868801528651808601885260105485168152601154808616828501528490048216818901528751808701895260125486168152601354808716828601528590048316818a01528851968701895260145486168752601554958616938701939093529290930490921694830194909452610514939184565b60405161028294939291906131d6565b61053761053236600461320d565b611345565b60408051928352602083019190915201610282565b6102ed61055a366004613131565b61156a565b6102ed7f000000000000000000000000000000000000000000000000000000000000000081565b60185461027690600160a01b900460ff1681565b61029360035481565b61035e6105b136600461325e565b61157a565b6105c96105c43660046133b9565b6116c0565b6040516001600160e01b03199091168152602001610282565b61035e6105f0366004613466565b6116d2565b601854600160a01b900460ff16610276565b6102ed7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160b01b900461ffff16610293565b6017546102ed906001600160a01b031681565b6000546001546106b6916001600160a01b0380821692600160a01b830461ffff90811693600160b01b810490911692600160c01b9091046001600160401b0316916001600160581b03811691600160581b820460ff1691600160601b90041687565b604080516001600160a01b03988916815261ffff978816602082015295909616958501959095526001600160401b039290921660608401526001600160581b03166080830152151560a0820152911660c082015260e001610282565b6102937f000000000000000000000000000000000000000000000000000000000000000081565b6105c9610747366004613479565b63f23a6e6160e01b95945050505050565b61035e61076636600461317f565b61180d565b6102ed7f000000000000000000000000000000000000000000000000000000000000000081565b61035e6107a03660046130ce565b61183e565b60006001600160e01b03198216630271189760e51b14806107d657506301ffc9a760e01b6001600160e01b03198316145b92915050565b604051638c9c907b60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301527f000000000000000000000000000000000000000000000000000000000000000060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690638c9c907b906044015b602060405180830381865afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b291906134e1565b905090565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461090a5760405162461bcd60e51b8152600401610901906134fa565b60405180910390fd5b61091385611988565b6001546001600160581b031683101561092e57506000610a71565b6000610938610b60565b6017549091506001600160a01b0316158015906109555750600081115b15610964576109648685611041565b6040516334c4023f60e11b8152306004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636988047e90604401600060405180830381600087803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b505050506109ec611c75565b806109f5610b60565b6109ff9190613536565b91508215610a1557610a12828483611d56565b91505b6001546001600160581b03168211610a6f5760405162461bcd60e51b815260206004820152601d60248201527f6465706f7369743a206e6f2f64757374207368617265732061646465640000006044820152606401610901565b505b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb919061354d565b6001600160a01b0316336001600160a01b03161480610b425750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610b5e5760405162461bcd60e51b81526004016109019061356a565b565b6000610b6a6107dc565b610b72611e0b565b6108b29190613588565b60405163270b84ad60e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063270b84ad90602401610871565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4d919061354d565b6001600160a01b0316336001600160a01b03161480610c945750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b610cb05760405162461bcd60e51b81526004016109019061356a565b4260035410610cfa5760405162461bcd60e51b815260206004820152601660248201527570616e6963206f6e636520706572203620686f75727360501b6044820152606401610901565b610b5e611e5a565b60048160088110610d1257600080fd5b01546001600160a01b0316905081565b610d2a610b60565b601a54601760009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da491906134e1565b610dae9190613536565b610dc5906c0c9f2c9cd04674edea400000006135a0565b610dcf91906135d5565b60196000828254610de09190613588565b90915550506001600160a01b0383166000908152601b60205260408120548290610e0b9085906135a0565b610e1591906135d5565b6c0c9f2c9cd04674edea4000000060195485610e3191906135a0565b610e3b91906135d5565b610e459190613536565b90507376bf0c28e604cc3fe9967c83b3c3f31c213cfe648115610fc057604051630441a3e760e41b815260036004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063441a3e7090604401600060405180830381600087803b158015610ecb57600080fd5b505af1158015610edf573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152610f6292508791506001600160a01b038416906370a0823190602401602060405180830381865afa158015610f2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5191906134e1565b6001600160a01b0384169190611f45565b6001600160a01b0385166000908152601b60205260409020548390610f889086906135a0565b610f9291906135d5565b6001600160a01b0386166000908152601b602052604081208054909190610fba908490613536565b90915550505b601760009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103791906134e1565b601a555050505050565b6c0c9f2c9cd04674edea400000006019548261105d91906135a0565b61106791906135d5565b6001600160a01b0383166000908152601b60205260408120805490919061108f908490613588565b9091555061109d9050610b60565b601a54601760009054906101000a90046001600160a01b03166001600160a01b03166342da4eb36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111791906134e1565b6111219190613536565b611138906c0c9f2c9cd04674edea400000006135a0565b61114291906135d5565b601960008282546111539190613588565b9091555050601754604080516342da4eb360e01b815290516001600160a01b03909216916342da4eb3916004808201926020929091908290030181865afa1580156111a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c691906134e1565b601a555050565b604051630b92054b60e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e48152c90602401602060405180830381865afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190613605565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da919061354d565b6001600160a01b0316336001600160a01b031614806113215750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61133d5760405162461bcd60e51b81526004016109019061356a565b610b5e611c75565b600080336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113905760405162461bcd60e51b8152600401610901906134fa565b600061139a611e0b565b905060006113a66107dc565b6113b09083613588565b905060006113bf878388611d56565b90506113ca8a611988565b6017546001600160a01b0316158015906113e45750600082115b156113f4576113f48a8983610d22565b600154819061140c906001600160581b03168a613588565b1115611416578097505b8288111561143b5761143061142b848a613536565b611fa8565b611438611e0b565b92505b6000611445610b60565b90506000838210611457576000611461565b6114618285613536565b9050611477611470828c613588565b8986612092565b965088871115611485578896505b8061149188868b611d56565b61149b9190613536565b9950848a11156114a9578499505b60008a116115045760405162461bcd60e51b815260206004820152602260248201527f6e6f7468696e6720746f20776974686472617720616674657220736c69707061604482015261676560f01b6064820152608401610901565b6115586001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008c6120d2565b50889450505050509550959350505050565b600c8160028110610d1257600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc919061354d565b6001600160a01b0316336001600160a01b031614806116435750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61165f5760405162461bcd60e51b81526004016109019061356a565b6116766116713683900383018361367d565b611892565b806000611683828261379a565b9050507fc2c7ac08416765095e5e7b6fc1fb40fbb89d6d8261453c24cae5bc89748b2b4d816040516116b591906138be565b60405180910390a150565b63bc197c8160e01b5b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611754919061354d565b6001600160a01b0316336001600160a01b0316148061179b5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6117b75760405162461bcd60e51b81526004016109019061356a565b6117ce6117c9368390038301836139e9565b61218a565b80600e6117db8282613ab6565b9050507f9db956569328ca3023537c325a5109c131a222cd1e1bc4e012d533669902aa55816040516116b59190613bc1565b6001600160a01b0382166000908152601b602052604081208054839290611835908490613588565b90915550505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118865760405162461bcd60e51b8152600401610901906134fa565b61188f81611988565b50565b80600001516001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118f0575060408051601f3d908101601f191682019092526118ed9181019061354d565b60015b61192d5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b2103937baba32b960911b6044820152606401610901565b506126de816020015161ffff16111561188f5760405162461bcd60e51b815260206004820152601860248201527f5f736c697070616765466163746f7220746f6f206869676800000000000000006044820152606401610901565b6000546002546119a891600160c01b90046001600160401b031690613588565b43101580156119bc57506119ba6111cd565b155b1561188f5760006119cb611e0b565b90506119d56122b5565b6001546001600160581b03166000805b7f0000000000000000000000000000000000000000000000000000000000000000811015611b3257600060048260088110611a2257611a22613c01565b01546040516370a0823160e01b81523060048201526001600160a01b03909116915060009082906370a0823190602401602060405180830381865afa158015611a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9391906134e1565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611adc57611ad98682613536565b90505b84811115611b1d5760019350611af9600e6000601685858c612396565b9050611b1d600082847376bf0c28e604cc3fe9967c83b3c3f31c213cfe6430612638565b50508080611b2a90613c17565b9150506119e5565b508015611c6b576040516370a0823160e01b81523060048201527376bf0c28e604cc3fe9967c83b3c3f31c213cfe649060009082906370a0823190602401602060405180830381865afa158015611b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb191906134e1565b9050611be76001600160a01b0383167f000000000000000000000000000000000000000000000000000000000000000083612b14565b604051631c57762b60e31b815260036004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e2bbb15890604401600060405180830381600087803b158015611c5057600080fd5b505af1158015611c64573d6000803e3d6000fd5b5050505050505b5050436002555050565b6000611c7f611e0b565b905080611c895750565b6000611c936107dc565b9050611c9e82612c29565b6000611ca86107dc565b60005490915061271090600160a01b900461ffff16611cc78585613588565b611cd191906135a0565b611cdb91906135d5565b6001546001600160581b0316611cef611e0b565b611cf99084613588565b611d039190613588565b1015611d515760405162461bcd60e51b815260206004820152601b60248201527f48696768207661756c74206465706f73697420736c69707061676500000000006044820152606401610901565b505050565b600080806000198587098587029250828110838203039150508060001415611d905760008411611d8557600080fd5b508290049050611e04565b808411611d9c57600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401610871565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660248301527f00000000000000000000000000000000000000000000000000000000000000006044808401919091528351808403909101815260649092018352602080830180516001600160e01b0316630644076f60e41b1790528351808501909452601d84527f656d657267656e63797661756c747769746864726177206661696c65640000009084015261188f927f00000000000000000000000000000000000000000000000000000000000000009091169190612d5e565b6040516001600160a01b038316602482015260448101829052611d5190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612e32565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660248301527f0000000000000000000000000000000000000000000000000000000000000000604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166315d54f0360e21b179052835180850190945260148452731d985d5b1d1dda5d1a191c985dc819985a5b195960621b9084015261208e927f00000000000000000000000000000000000000000000000000000000000000009091169190612d5e565b5050565b600061209f848484611d56565b9050600082806120b1576120b16135bf565b8486091115611e045760001981106120c857600080fd5b806116c981613c17565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015612123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061214791906134e1565b6121519190613588565b6040516001600160a01b03851660248201526044810182905290915061218490859063095ea7b360e01b90606401611f71565b50505050565b6040810151602001516001600160a01b03166121e15760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420726577617264206164647265737360501b6044820152606401610901565b6060810151602001516001600160a01b031661223f5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206275796261636b20616464726573730000000000000000006044820152606401610901565b6127108160600151604001518260400151604001518360200151604001516122679190613c32565b6122719190613c32565b61ffff16111561188f5760405162461bcd60e51b815260206004820152600f60248201526e4d617820666565206f66203130302560881b6044820152606401610901565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660248301527f00000000000000000000000000000000000000000000000000000000000000006044808401919091528351808403909101815260649092018352602080830180516001600160e01b0316635359344d60e11b179052835180850190945260138452721d985d5b1d1a185c9d995cdd0819985a5b1959606a1b9084015261188f927f00000000000000000000000000000000000000000000000000000000000000009091169190612d5e565b600686015460078701546040516370a0823160e01b81526001600160a01b039182166004820152600092839216906370a0823190602401602060405180830381865afa1580156123ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240e91906134e1565b60038901548593509091506000906127109061243590600160a01b900461ffff16856135a0565b61243f91906135d5565b90508015612472576002890154612465908990839089906001600160a01b031688612638565b61246f8184613536565b92505b60058901546127109061249090600160a01b900461ffff16876135a0565b61249a91906135d5565b905080156125055760068901546124f8908990839089906001600160a01b038083169116146124d65760048d01546001600160a01b03166124e5565b60068d01546001600160a01b03165b60058e01546001600160a01b0316612638565b6125028184613536565b92505b60078901546127109061252390600160a01b900461ffff16876135a0565b61252d91906135d5565b9050801561256857600689015460078a015461255b918a9184918a916001600160a01b039182169116612638565b6125658184613536565b92505b86546001600160801b038082168501166fffffffffffffffffffffffffffffffff19909116178755600689015460078a01546040516370a0823160e01b81526001600160a01b039182166004820152849291909116906370a0823190602401602060405180830381865afa1580156125e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260891906134e1565b88546001600160801b0380821693909203600160801b918290048316019091160217909655509695505050505050565b816001600160a01b0316836001600160a01b0316141561267b576001600160a01b0381163014612676576126766001600160a01b0384168286611f45565b612b0d565b60018501548554604051620fc5df60ea1b81526001600160a01b03918216600482015285821660248201528482166044820152600092600160601b900490911690633f177c00906064016000604051808303816000875af11580156126e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261270c9190810190613c58565b905060005b81518110156127655760006001600160a01b031682828151811061273757612737613c01565b60200260200101516001600160a01b0316141561275357612765565b8061275d81613c17565b915050612711565b6000816001600160401b0381111561277f5761277f613276565b6040519080825280602002602001820160405280156127a8578160200160208202803683370190505b50905060005b8281101561280c578381815181106127c8576127c8613c01565b60200260200101518282815181106127e2576127e2613c01565b6001600160a01b03909216602092830291909101909101528061280481613c17565b9150506127ae565b50875460405163d06ca61f60e01b81526000916001600160a01b03169063d06ca61f9061283f908b908690600401613d2a565b600060405180830381865afa15801561285c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526128849190810190613d43565b8954815191925060009161271091600160a01b900461ffff169084906128ac90600190613536565b815181106128bc576128bc613c01565b60200260200101516128ce91906135a0565b6128d891906135d5565b8a549091506128f4906001600160a01b038a811691168b6120d2565b8954612908906001600160a01b0316612f04565b6001600160a01b0316876001600160a01b031614158061293157506001600160a01b0386163b15155b15612a3c5760018a0154600160581b900460ff16156129b8578954604051635c11d79560e01b81526001600160a01b0390911690635c11d79590612981908c90859088908c904290600401613dc8565b600060405180830381600087803b15801561299b57600080fd5b505af11580156129af573d6000803e3d6000fd5b50505050612b07565b89546040516338ed173960e01b81526001600160a01b03909116906338ed1739906129ef908c90859088908c904290600401613dc8565b6000604051808303816000875af1158015612a0e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a369190810190613d43565b50612b07565b60018a0154600160581b900460ff1615612a8757895460405163791ac94760e01b81526001600160a01b039091169063791ac94790612981908c90859088908c904290600401613dc8565b89546040516318cbafe560e01b81526001600160a01b03909116906318cbafe590612abe908c90859088908c904290600401613dc8565b6000604051808303816000875af1158015612add573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612b059190810190613d43565b505b50505050505b5050505050565b801580612b8e5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015612b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8c91906134e1565b155b612bf95760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610901565b6040516001600160a01b038316602482015260448101829052611d5190849063095ea7b360e01b90606401611f71565b612c7d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836120d2565b604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811660248301527f0000000000000000000000000000000000000000000000000000000000000000604483015260648083018590528351808403909101815260849092018352602080830180516001600160e01b03166371f08d6160e01b179052835180850190945260138452721d985d5b1d19195c1bdcda5d0819985a5b1959606a1b9084015261208e927f000000000000000000000000000000000000000000000000000000000000000090911691905b6060833b612dbd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610901565b600080856001600160a01b031685604051612dd89190613e30565b600060405180830381855af49150503d8060008114612e13576040519150601f19603f3d011682016040523d82523d6000602084013e612e18565b606091505b5091509150612e28828286612f84565b9695505050505050565b6000612e87826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612fbd9092919063ffffffff16565b805190915015611d515780806020019051810190612ea59190613605565b611d515760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610901565b6000816001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612f60575060408051601f3d908101601f19168201909252612f5d9181019061354d565b60015b6107d65750730d500b1d8e8ef31e21c99d1db9a6444d3adf1270919050565b919050565b60608315612f93575081611e04565b825115612fa35782518084602001fd5b8160405162461bcd60e51b81526004016109019190613e4c565b6060610a71848460008585843b6130165760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610901565b600080866001600160a01b031685876040516130329190613e30565b60006040518083038185875af1925050503d806000811461306f576040519150601f19603f3d011682016040523d82523d6000602084013e613074565b606091505b5091509150613084828286612f84565b979650505050505050565b6000602082840312156130a157600080fd5b81356001600160e01b031981168114611e0457600080fd5b6001600160a01b038116811461188f57600080fd5b6000602082840312156130e057600080fd5b8135611e04816130b9565b6000806000806080858703121561310157600080fd5b843561310c816130b9565b9350602085013561311c816130b9565b93969395505050506040820135916060013590565b60006020828403121561314357600080fd5b5035919050565b60008060006060848603121561315f57600080fd5b833561316a816130b9565b95602085013595506040909401359392505050565b6000806040838503121561319257600080fd5b823561319d816130b9565b946020939093013593505050565b80516001600160a01b0390811683526020808301519091169083015260409081015161ffff16910152565b61018081016131e582876131ab565b6131f260608301866131ab565b6131ff60c08301856131ab565b6116c96101208301846131ab565b600080600080600060a0868803121561322557600080fd5b8535613230816130b9565b94506020860135613240816130b9565b94979496505050506040830135926060810135926080909101359150565b600060e0828403121561327057600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156132b4576132b4613276565b604052919050565b60006001600160401b038211156132d5576132d5613276565b5060051b60200190565b600082601f8301126132f057600080fd5b81356020613305613300836132bc565b61328c565b82815260059290921b8401810191818101908684111561332457600080fd5b8286015b8481101561333f5780358352918301918301613328565b509695505050505050565b600082601f83011261335b57600080fd5b81356001600160401b0381111561337457613374613276565b613387601f8201601f191660200161328c565b81815284602083860101111561339c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156133d157600080fd5b85356133dc816130b9565b945060208601356133ec816130b9565b935060408601356001600160401b038082111561340857600080fd5b61341489838a016132df565b9450606088013591508082111561342a57600080fd5b61343689838a016132df565b9350608088013591508082111561344c57600080fd5b506134598882890161334a565b9150509295509295909350565b6000610180828403121561327057600080fd5b600080600080600060a0868803121561349157600080fd5b853561349c816130b9565b945060208601356134ac816130b9565b9350604086013592506060860135915060808601356001600160401b038111156134d557600080fd5b6134598882890161334a565b6000602082840312156134f357600080fd5b5051919050565b6020808252600c908201526b10bb30bab63a3432b0b632b960a11b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561354857613548613520565b500390565b60006020828403121561355f57600080fd5b8151611e04816130b9565b60208082526004908201526310b3b7bb60e11b604082015260600190565b6000821982111561359b5761359b613520565b500190565b60008160001904831182151516156135ba576135ba613520565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826135f257634e487b7160e01b600052601260045260246000fd5b500490565b801515811461188f57600080fd5b60006020828403121561361757600080fd5b8151611e04816135f7565b61ffff8116811461188f57600080fd5b6001600160401b038116811461188f57600080fd5b6001600160581b038116811461188f57600080fd5b8035612f7f81613647565b8035612f7f816135f7565b8035612f7f816130b9565b600060e0828403121561368f57600080fd5b60405160e081018181106001600160401b03821117156136b1576136b1613276565b60405282356136bf816130b9565b815260208301356136cf81613622565b602082015260408301356136e281613622565b604082015260608301356136f581613632565b60608201526137066080840161365c565b608082015261371760a08401613667565b60a082015261372860c08401613672565b60c08201529392505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b805461ffff60a01b191660a09290921b61ffff60a01b16919091179055565b600081356107d681613647565b600081356107d6816135f7565b600081356107d6816130b9565b81356137a5816130b9565b6137af8183613734565b5060208201356137be81613622565b6137c88183613754565b5060408201356137d781613622565b815461ffff60b01b19811660b09290921b61ffff60b01b169182178355606084013561380281613632565b6001600160b01b039190911690911760c09190911b6001600160c01b0319161781556001810161385861383760808501613773565b82546affffffffffffffffffffff19166001600160581b0391909116178255565b61388561386760a08501613780565b82805460ff60581b191691151560581b60ff60581b16919091179055565b611d5161389460c0850161378d565b82546bffffffffffffffffffffffff1660609190911b6bffffffffffffffffffffffff1916178255565b60e0810182356138cd816130b9565b6001600160a01b0316825260208301356138e681613622565b61ffff908116602084015260408401359061390082613622565b166040830152606083013561391481613632565b6001600160401b03166060830152608083013561393081613647565b6001600160581b0316608083015261394a60a08401613667565b151560a083015261395d60c08401613672565b6001600160a01b03811660c08401525b5092915050565b60006060828403121561398657600080fd5b604051606081018181106001600160401b03821117156139a8576139a8613276565b60405290508082356139b9816130b9565b815260208301356139c9816130b9565b602082015260408301356139dc81613622565b6040919091015292915050565b600061018082840312156139fc57600080fd5b604051608081018181106001600160401b0382111715613a1e57613a1e613276565b604052613a2b8484613974565b8152613a3a8460608501613974565b6020820152613a4c8460c08501613974565b6040820152613a5f846101208501613974565b60608201529392505050565b8135613a76816130b9565b613a808183613734565b50600181016020830135613a93816130b9565b613a9d8183613734565b506040830135613aac81613622565b6121848183613754565b8135613ac1816130b9565b613acb8183613734565b50600181016020830135613ade816130b9565b613ae88183613734565b506040830135613af781613622565b613b018183613754565b50506060820135613b11816130b9565b613b1e8160028401613734565b50600381016080830135613b31816130b9565b613b3b8183613734565b5060a0830135613b4a81613622565b613b548183613754565b5050613b6660c0830160048301613a6b565b61208e610120830160068301613a6b565b8035613b82816130b9565b6001600160a01b039081168352602082013590613b9e826130b9565b1660208301526040810135613bb281613622565b61ffff81166040840152505050565b6101808101613bd08284613b77565b613be06060830160608501613b77565b613bf060c0830160c08501613b77565b61012061396d818401828601613b77565b634e487b7160e01b600052603260045260246000fd5b6000600019821415613c2b57613c2b613520565b5060010190565b600061ffff808316818516808303821115613c4f57613c4f613520565b01949350505050565b60006020808385031215613c6b57600080fd5b82516001600160401b03811115613c8157600080fd5b8301601f81018513613c9257600080fd5b8051613ca0613300826132bc565b81815260059190911b82018301908381019087831115613cbf57600080fd5b928401925b82841015613084578351613cd7816130b9565b82529284019290840190613cc4565b600081518084526020808501945080840160005b83811015613d1f5781516001600160a01b031687529582019590820190600101613cfa565b509495945050505050565b828152604060208201526000610a716040830184613ce6565b60006020808385031215613d5657600080fd5b82516001600160401b03811115613d6c57600080fd5b8301601f81018513613d7d57600080fd5b8051613d8b613300826132bc565b81815260059190911b82018301908381019087831115613daa57600080fd5b928401925b8284101561308457835182529284019290840190613daf565b85815284602082015260a060408201526000613de760a0830186613ce6565b6001600160a01b0394909416606083015250608001529392505050565b60005b83811015613e1f578181015183820152602001613e07565b838111156121845750506000910152565b60008251613e42818460208701613e04565b9190910192915050565b6020815260008251806020840152613e6b816040850160208701613e04565b601f01601f1916919091016040019291505056fea2646970667358221220773bb2bbe30476065696faaf45a894ee0602a48d99cc69a34934340966ef83fb64736f6c634300080a0033",
    "deployedBytecode": "",
    "sourceMap": "406:4588:4:-:0;;;321:12:0;290:43;;736:1179:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1131:19;1078:10;1090:7;1037:9;595:17:0;:9;:15;;;;;:17;;:::i;:::-;622:20;;:8;:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;622:20:0;-1:-1:-1;;;622:20:0;-1:-1:-1;;;;;622:20:0;;;;-1:-1:-1;;;622:20:0;;-1:-1:-1;;;;;622:20:0;;;;-1:-1:-1;;;622:20:0;-1:-1:-1;;;;;;622:20:0;;;-1:-1:-1;;;;;622:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;622:20:0;;;;;-1:-1:-1;;;;;;622:20:0;;;-1:-1:-1;;;;;622:20:0;;;;;;;;;;;;;;;;657:22;;;;;633:9;;4521:13:32;;-1:-1:-1;;;;;4517:22:32;;;4499:41;;4587:4;4575:17;;;4569:24;4612:6;4656:21;;;4634:20;;;4627:51;;;;4738:4;4726:17;;;4720:24;4716:33;;;4694:20;;;4687:63;4810:4;4798:17;;;4792:24;-1:-1:-1;;;;;4788:49:32;4766:20;;;4759:79;4898:4;4886:17;;;4880:24;-1:-1:-1;;;;;4876:49:32;4854:20;;;4847:79;4479:3;4984:17;;;4978:24;4971:32;4964:40;4942:20;;;4935:70;5065:4;5053:17;;;5047:24;5043:33;5021:20;;;5014:63;;;;4448:3;4433:19;;4252:831;657:22:0;;;;;;;;-1:-1:-1;;;;;;1315:22:1;;;;1356:6;1443:121;1459:7;:14;1455:1;:18;:55;;;;;1508:1;-1:-1:-1;;;;;1477:33:1;1485:7;1493:1;1485:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1477:33:1;;;1455:55;1443:121;;;1543:7;1551:1;1543:10;;;;;;;;:::i;:::-;;;;;;;1531:6;1538:1;1531:9;;;;;;;:::i;:::-;;:22;;-1:-1:-1;;;;;;1531:22:1;-1:-1:-1;;;;;1531:22:1;;;;;;;;;;1512:3;;;;:::i;:::-;;;;1443:121;;;1588:1;1573:16;;;;;;1674:19;1724:10;-1:-1:-1;;;;;1707:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1707:38:1;;;;;;;;-1:-1:-1;;1707:38:1;;;;;;;;;;;;:::i;:::-;;;1703:345;;-1:-1:-1;1982:7:1;:23;;-1:-1:-1;;;;;;1982:23:1;-1:-1:-1;;;;;1982:23:1;;;;;-1:-1:-1;1703:345:1;;;1806:7;1786;1794:1;1786:10;;:28;;;;;-1:-1:-1;;;;;1786:28:1;;;;;-1:-1:-1;;;;;1786:28:1;;;;;;1865:10;-1:-1:-1;;;;;1848:36:1;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1828:7;1836:1;1828:10;:59;;-1:-1:-1;;;;;;1828:59:1;-1:-1:-1;;;;;1828:59:1;;;;;;;;;;-1:-1:-1;1918:1:1;;-1:-1:-1;1703:345:1;2057:30;;-1:-1:-1;;;;;;;;926:46:2;;;;;;;982:18;:51;;-1:-1:-1;;;;;982:51:2;;;;;;;;;;;1166:31:4;;::::3;982:51:2::0;1166:31:4;1207:32;;::::3;;::::0;-1:-1:-1;;1249:10:4::3;::::0;1269:16:::3;:47:::0;;-1:-1:-1;;;;;;1269:47:4::3;::::0;;;::::3;;::::0;;-1:-1:-1;;1890:11:4::3;:18:::0;;-1:-1:-1;;;;;;;1890:18:4;;::::3;;::::0;;406:4588;;1557:279:14;1645:9;:16;;;-1:-1:-1;;;;;1632:38:14;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1632:40:14;;;;;;;;-1:-1:-1;;1632:40:14;;;;;;;;;;;;:::i;:::-;;;1628:109;;1710:24;;-1:-1:-1;;;1710:24:14;;5923:2:32;1710:24:14;;;5905:21:32;5962:2;5942:18;;;5935:30;-1:-1:-1;;;5981:18:32;;;5974:44;6035:18;;1710:24:14;;;;;;;;1628:109;1673:20;1150:4;1754:9;:24;;;:46;;;;1746:83;;;;-1:-1:-1;;;1746:83:14;;6266:2:32;1746:83:14;;;6248:21:32;6305:2;6285:18;;;6278:30;6344:26;6324:18;;;6317:54;6388:18;;1746:83:14;6064:348:32;1746:83:14;1557:279;:::o;14:139:32:-;-1:-1:-1;;;;;97:31:32;;87:42;;77:70;;143:1;140;133:12;158:146;237:13;;259:39;237:13;259:39;:::i;:::-;158:146;;;:::o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:248;508:2;502:9;550:4;538:17;;-1:-1:-1;;;;;570:34:32;;606:22;;;567:62;564:88;;;632:18;;:::i;:::-;668:2;661:22;441:248;:::o;694:163::-;772:13;;825:6;814:18;;804:29;;794:57;;847:1;844;837:12;862:175;940:13;;-1:-1:-1;;;;;982:30:32;;972:41;;962:69;;1027:1;1024;1017:12;1042:164;1118:13;;1167;;1160:21;1150:32;;1140:60;;1196:1;1193;1186:12;1211:990;1284:5;1337:3;1330:4;1322:6;1318:17;1314:27;1304:55;;1355:1;1352;1345:12;1304:55;1378:13;;1410:4;-1:-1:-1;;;;;1463:10:32;;;1460:36;;;1476:18;;:::i;:::-;1522:2;1519:1;1515:10;1554:2;1548:9;1617:2;1613:7;1608:2;1604;1600:11;1596:25;1588:6;1584:38;1672:6;1660:10;1657:22;1652:2;1640:10;1637:18;1634:46;1631:72;;;1683:18;;:::i;:::-;1719:2;1712:22;1769:18;;;1845:15;;;1841:24;;;1803:15;;;;-1:-1:-1;1877:15:32;;;1874:35;;;1905:1;1902;1895:12;1874:35;1941:2;1933:6;1929:15;1918:26;;1953:218;1969:6;1964:3;1961:15;1953:218;;;2042:3;2036:10;2059:39;2092:5;2059:39;:::i;:::-;2111:18;;2149:12;;;;1986;;;;1953:218;;;2189:6;1211:990;-1:-1:-1;;;;;;;1211:990:32:o;2206:2041::-;2425:6;2433;2441;2449;2457;2465;2473;2481;2525:9;2516:7;2512:23;2555:3;2551:2;2547:12;2544:32;;;2572:1;2569;2562:12;2544:32;2604:9;2598:16;2623:39;2656:5;2623:39;:::i;:::-;2731:2;2716:18;;2710:25;2681:5;;-1:-1:-1;2744:41:32;2710:25;2744:41;:::i;:::-;2856:2;2841:18;;2835:25;2804:7;;-1:-1:-1;2869:41:32;2835:25;2869:41;:::i;:::-;2981:2;2966:18;;2960:25;2929:7;;-1:-1:-1;2994:41:32;2960:25;2994:41;:::i;:::-;3101:3;3086:19;;3080:26;3054:7;;-1:-1:-1;3080:26:32;-1:-1:-1;3141:4:32;-1:-1:-1;;3122:17:32;;3118:28;3115:48;;;3159:1;3156;3149:12;3115:48;;3187:17;;:::i;:::-;3249:3;3238:9;3234:19;3228:26;3263:41;3296:7;3263:41;:::i;:::-;3313:24;;3371:49;3415:3;3400:19;;3371:49;:::i;:::-;3366:2;3357:7;3353:16;3346:75;3455:50;3499:4;3488:9;3484:20;3455:50;:::i;:::-;3450:2;3437:16;;3430:76;3551:3;3536:19;;3530:26;-1:-1:-1;;;;;3624:16:32;;;3612:29;;3602:57;;3655:1;3652;3645:12;3602:57;3693:7;3688:2;3679:7;3675:16;3668:33;3736:49;3780:3;3769:9;3765:19;3736:49;:::i;:::-;3730:3;3721:7;3717:17;3710:76;3821:47;3863:3;3852:9;3848:19;3821:47;:::i;:::-;3815:3;3806:7;3802:17;3795:74;3904:50;3949:3;3938:9;3934:19;3904:50;:::i;:::-;3898:3;3885:17;;3878:77;4025:3;4010:19;;4004:26;3889:7;;-1:-1:-1;4042:14:32;;;4039:34;;;4069:1;4066;4059:12;4039:34;;;4092:80;4164:7;4155:6;4144:9;4140:22;4092:80;:::i;:::-;4082:90;;;4191:50;4236:3;4225:9;4221:19;4191:50;:::i;:::-;4181:60;;2206:2041;;;;;;;;;;;:::o;5088:127::-;5149:10;5144:3;5140:20;5137:1;5130:31;5180:4;5177:1;5170:15;5204:4;5201:1;5194:15;5220:232;5259:3;-1:-1:-1;;5280:17:32;;5277:140;;;5339:10;5334:3;5330:20;5327:1;5320:31;5374:4;5371:1;5364:15;5402:4;5399:1;5392:15;5277:140;-1:-1:-1;5444:1:32;5433:13;;5220:232::o;5457:259::-;5527:6;5580:2;5568:9;5559:7;5555:23;5551:32;5548:52;;;5596:1;5593;5586:12;5548:52;5628:9;5622:16;5647:39;5680:5;5647:39;:::i;:::-;5705:5;5457:259;-1:-1:-1;;;5457:259:32:o;6064:348::-;406:4588:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "406:4588:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;312:221:24;;;;;;:::i;:::-;;:::i;:::-;;;566:14:32;;559:22;541:41;;529:2;514:18;312:221:24;;;;;;;;3719:131:4;;;:::i;:::-;;;739:25:32;;;727:2;712:18;3719:131:4;593:177:32;656:38:2;;;;;;290:43:0;;;;;;2308:96:1;2378:19;;-1:-1:-1;;;2378:19:1;;;;2308:96;;667:31:4;;;;;;;;-1:-1:-1;;;;;1073:32:32;;;1055:51;;1043:2;1028:18;667:31:4;893:219:32;7894:111:2;;;;;;:::i;:::-;-1:-1:-1;;;;;7981:17:2;7955:7;7981:17;;;:10;:17;;;;;;;7894:111;7762:126;;;;;;:::i;:::-;7841:18;:40;;-1:-1:-1;;;;;;7841:40:2;-1:-1:-1;;;;;7841:40:2;;;;;;;;;;7762:126;;;1845:1284;;;;;;:::i;:::-;;:::i;587:33::-;;;;;-1:-1:-1;;;;;587:33:2;;;1865:63:0;;;:::i;1370:116::-;;;:::i;1050:114:2:-;;;:::i;1933:173:0:-;;;:::i;1031:32:1:-;;;;;;:::i;:::-;;:::i;2409:99::-;2479:10;:22;-1:-1:-1;;;2479:22:1;;-1:-1:-1;;;;;2479:22:1;2409:99;;6286:1216:2;;;;;;:::i;:::-;;:::i;785:46::-;;;;;;:::i;:::-;;;;;;;;;;;;;;3135:568;;;;;;:::i;:::-;;:::i;7645:111::-;;;:::i;2111:80:0:-;;;:::i;1141:42:1:-;;;;;-1:-1:-1;;;;;1141:42:1;;;;-1:-1:-1;;;1141:42:1;;;;;;;;;-1:-1:-1;;;;;3604:15:32;;;3586:34;;3656:15;;;;3651:2;3636:18;;3629:43;3506:18;1141:42:1;3359:319:32;1109:26:1;;;;;;;;;;;;-1:-1:-1;;;;;1109:26:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1109:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3795:2485:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;5421:25:32;;;5477:2;5462:18;;5455:34;;;;5394:18;3795:2485:2;5247:248:32;1069:29:1;;;;;;:::i;:::-;;:::i;477:40:2:-;;;;;627:23;;;;;-1:-1:-1;;;627:23:2;;;;;;393:27:0;;;;;;1618:173;;;;;;:::i;:::-;;:::i;404:247:23:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;8973:33:32;;;8955:52;;8943:2;8928:18;404:247:23;8811:202:32;2518:154:1;;;;;;:::i;:::-;;:::i;8123:84:2:-;8193:11;;-1:-1:-1;;;8193:11:2;;;;8123:84;;775:33:1;;;;;1516:92:0;1560:4;1583:18;-1:-1:-1;;;1583:18:0;;;;1516:92;;548:33:2;;;;;-1:-1:-1;;;;;548:33:2;;;192:29:0;;;;;;;-1:-1:-1;;;;;192:29:0;;;;-1:-1:-1;;;192:29:0;;;;;;;-1:-1:-1;;;192:29:0;;;;;;-1:-1:-1;;;192:29:0;;;-1:-1:-1;;;;;192:29:0;;-1:-1:-1;;;;;192:29:0;;;-1:-1:-1;;;192:29:0;;;;;-1:-1:-1;;;192:29:0;;;;;;;;;-1:-1:-1;;;;;9954:15:32;;;9936:34;;9989:6;10031:15;;;10026:2;10011:18;;10004:43;10083:15;;;;10063:18;;;10056:43;;;;-1:-1:-1;;;;;10135:31:32;;;;10130:2;10115:18;;10108:59;-1:-1:-1;;;;;10204:37:32;10198:3;10183:19;;10176:66;10286:14;10279:22;9916:3;10258:19;;10251:51;10339:15;;10333:3;10318:19;;10311:44;9885:3;9870:19;192:29:0;9558:803:32;704:25:4;;;;;179:219:23;;;;;;:::i;:::-;-1:-1:-1;;;179:219:23;;;;;;;;8011:110:2;;;;;;:::i;:::-;;:::i;626:35:4:-;;;;;1655:83:2;;;;;;:::i;:::-;;:::i;312:221:24:-;414:4;-1:-1:-1;;;;;;437:49:24;;-1:-1:-1;;;437:49:24;;:89;;-1:-1:-1;;;;;;;;;;871:40:29;;;490:36:24;430:96;312:221;-1:-1:-1;;312:221:24:o;3719:131:4:-;3803:40;;-1:-1:-1;;;3803:40:4;;-1:-1:-1;;;;;3827:10:4;11297:32:32;;3803:40:4;;;11279:51:32;3839:3:4;11346:18:32;;;11339:34;-1:-1:-1;;3803:6:4;:23;;;;;;11252:18:32;;3803:40:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3796:47;;3719:131;:::o;1845:1284:2:-;1968:19;1469:10;-1:-1:-1;;;;;1491:11:2;1469:34;;1461:59;;;;-1:-1:-1;;;1461:59:2;;;;;;;:::i;:::-;;;;;;;;;1999:12:::1;2005:5;1999;:12::i;:::-;2075:13;::::0;-1:-1:-1;;;;;2075:13:2::1;2064:24:::0;::::1;2060:38;;;-1:-1:-1::0;2097:1:2::1;2090:8;;2060:38;2154:24;2181:17;:15;:17::i;:::-;2221:16;::::0;2154:44;;-1:-1:-1;;;;;;2221:16:2::1;2213:39:::0;;::::1;::::0;:63:::1;;;2275:1;2256:16;:20;2213:63;2209:150;;;2295:49;2328:5;2335:8;2295:32;:49::i;:::-;2607:58;::::0;-1:-1:-1;;;2607:58:2;;2649:4:::1;2607:58;::::0;::::1;11279:51:32::0;11346:18;;;11339:34;;;2607:11:2::1;-1:-1:-1::0;;;;;2607:33:2::1;::::0;::::1;::::0;11252:18:32;;2607:58:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2675:7;:5;:7::i;:::-;2843:16;2823:17;:15;:17::i;:::-;:36;;;;:::i;:::-;2809:50:::0;-1:-1:-1;2873:16:2;;2869:175:::1;;2973:60;2989:11;3002:12;3016:16;2973:15;:60::i;:::-;2959:74;;2869:175;3075:13;::::0;-1:-1:-1;;;;;3075:13:2::1;3061:27:::0;::::1;3053:69;;;::::0;-1:-1:-1;;;3053:69:2;;12378:2:32;3053:69:2::1;::::0;::::1;12360:21:32::0;12417:2;12397:18;;;12390:30;12456:31;12436:18;;;12429:59;12505:18;;3053:69:2::1;12176:353:32::0;3053:69:2::1;1989:1140;1530:1;1845:1284:::0;;;;;;:::o;1865:63:0:-;1337:11:2;-1:-1:-1;;;;;1337:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:33:2;:10;-1:-1:-1;;;;;1323:33:2;;:71;;;-1:-1:-1;1360:10:2;-1:-1:-1;;;;;1382:11:2;1360:34;;1323:71;1315:88;;;;-1:-1:-1;;;1315:88:2;;;;;;;:::i;:::-;1865:63:0:o;1370:116::-;1418:7;1461:18;:16;:18::i;:::-;1444:14;:12;:14::i;:::-;:35;;;;:::i;1050:114:2:-;1119:38;;-1:-1:-1;;;1119:38:2;;1151:4;1119:38;;;1055:51:32;1096:4:2;;1119:11;-1:-1:-1;;;;;1119:23:2;;;;1028:18:32;;1119:38:2;893:219:32;1933:173:0;1337:11:2;-1:-1:-1;;;;;1337:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:33:2;:10;-1:-1:-1;;;;;1323:33:2;;:71;;;-1:-1:-1;1360:10:2;-1:-1:-1;;;;;1382:11:2;1360:34;;1323:71;1315:88;;;;-1:-1:-1;;;1315:88:2;;;;;;;:::i;:::-;2004:15:0::1;1986;;:33;1977:69;;;::::0;-1:-1:-1;;;1977:69:0;;13457:2:32;1977:69:0::1;::::0;::::1;13439:21:32::0;13496:2;13476:18;;;13469:30;-1:-1:-1;;;13515:18:32;;;13508:52;13577:18;;1977:69:0::1;13255:346:32::0;1977:69:0::1;2074:25;:23;:25::i;1031:32:1:-:0;;;;;;;;;;;;;;-1:-1:-1;;;;;1031:32:1;;-1:-1:-1;1031:32:1;:::o;6286:1216:2:-;6514:17;:15;:17::i;:::-;6470:33;;6433:16;;;;;;;;;-1:-1:-1;;;;;6433:16:2;-1:-1:-1;;;;;6433:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;;:::i;:::-;6432:79;;6507:4;6432:79;:::i;:::-;:99;;;;:::i;:::-;6405:23;;:126;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6733:17:2;;6667:19;6733:17;;;:10;:17;;;;;;6764:9;;6733:28;;6753:8;;6733:28;:::i;:::-;:40;;;;:::i;:::-;6726:4;6700:23;;6689:8;:34;;;;:::i;:::-;:41;;;;:::i;:::-;:84;;;;:::i;:::-;6667:106;-1:-1:-1;6889:42:2;7048:15;;7044:283;;7079:36;;-1:-1:-1;;;7079:36:2;;7100:1;7079:36;;;5421:25:32;5462:18;;;5455:34;;;7079:11:2;-1:-1:-1;;;;;7079:20:2;;;;5394:18:32;;7079:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7162:37:2;;-1:-1:-1;;;7162:37:2;;7193:4;7162:37;;;1055:51:32;7129:71:2;;-1:-1:-1;7155:5:2;;-1:-1:-1;;;;;;7162:22:2;;;;;1028:18:32;;7162:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7129:25:2;;;:71;:25;:71::i;:::-;-1:-1:-1;;;;;7272:17:2;;;;;;:10;:17;;;;;;7303:9;;7272:28;;7292:8;;7272:28;:::i;:::-;:40;;;;:::i;:::-;-1:-1:-1;;;;;7251:17:2;;;;;;:10;:17;;;;;:61;;:17;;;:61;;;;;:::i;:::-;;;;-1:-1:-1;;7044:283:2;7372:16;;;;;;;;;-1:-1:-1;;;;;7372:16:2;-1:-1:-1;;;;;7372:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7336:33;:70;-1:-1:-1;;;;;6286:1216:2:o;3135:568::-;3286:4;3260:23;;3249:8;:34;;;;:::i;:::-;:41;;;;:::i;:::-;-1:-1:-1;;;;;3228:17:2;;;;;;:10;:17;;;;;:62;;:17;;;:62;;;;;:::i;:::-;;;;-1:-1:-1;3477:17:2;;-1:-1:-1;3477:15:2;:17::i;:::-;3433:33;;3396:16;;;;;;;;;-1:-1:-1;;;;;3396:16:2;-1:-1:-1;;;;;3396:32:2;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;;;:::i;:::-;3395:79;;3470:4;3395:79;:::i;:::-;:99;;;;:::i;:::-;3368:23;;:126;;;;;;;:::i;:::-;;;;-1:-1:-1;;3572:16:2;;:34;;;-1:-1:-1;;;3572:34:2;;;;-1:-1:-1;;;;;3572:16:2;;;;:32;;:34;;;;;;;;;;;;;;;:16;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3536:33;:70;-1:-1:-1;;3135:568:2:o;7645:111::-;7716:33;;-1:-1:-1;;;7716:33:2;;7743:4;7716:33;;;1055:51:32;7693:4:2;;7716:11;-1:-1:-1;;;;;7716:18:2;;;;1028::32;;7716:33:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2111:80:0:-;1337:11:2;-1:-1:-1;;;;;1337:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:33:2;:10;-1:-1:-1;;;;;1323:33:2;;:71;;;-1:-1:-1;1360:10:2;-1:-1:-1;;;;;1382:11:2;1360:34;;1323:71;1315:88;;;;-1:-1:-1;;;1315:88:2;;;;;;;:::i;:::-;2177:7:0::1;:5;:7::i;3795:2485:2:-:0;3931:18;;1469:10;-1:-1:-1;;;;;1491:11:2;1469:34;;1461:59;;;;-1:-1:-1;;;1461:59:2;;;;;;;:::i;:::-;4016:12:::1;4031:14;:12;:14::i;:::-;4016:29;;4119:21;4153:18;:16;:18::i;:::-;4143:28;::::0;:7;:28:::1;:::i;:::-;4119:52;;4243:16;4262:60;4278:11;4291:16;4309:12;4262:15;:60::i;:::-;4243:79;;4465:12;4471:5;4465;:12::i;:::-;4824:16;::::0;-1:-1:-1;;;;;4824:16:2::1;4816:39:::0;;::::1;::::0;:63:::1;;;4878:1;4859:16;:20;4816:63;4812:160;;;4895:66;4935:5;4942:8;4952;4895:39;:66::i;:::-;5089:13;::::0;5105:8;;5078:24:::1;::::0;-1:-1:-1;;;;;5089:13:2::1;5078:8:::0;:24:::1;:::i;:::-;:35;5074:72;;;5138:8;5127:19;;5074:72;5231:7;5220:8;:18;5216:137;;;5254:34;5269:18;5280:7:::0;5269:8;:18:::1;:::i;:::-;5254:14;:34::i;:::-;5325:14;:12;:14::i;:::-;5315:24;;5216:137;5447:20;5470:17;:15;:17::i;:::-;5447:40;;5497:21;5539:16;5521:15;:34;:75;;5595:1;5521:75;;;5558:34;5577:15:::0;5558:16;:34:::1;:::i;:::-;5497:99:::0;-1:-1:-1;5668:132:2::1;5707:27;5497:99:::0;5707:8;:27:::1;:::i;:::-;5748:12;5774:16;5668:25;:132::i;:::-;5652:148;;5877:11;5861:13;:27;5857:60;;;5906:11;5890:27;;5857:60;6003:16;5938:62;5954:13;5969:16;5987:12;5938:15;:62::i;:::-;:81;;;;:::i;:::-;5927:92;;6053:7;6042:8;:18;6038:42;;;6073:7;6062:18;;6038:42;6109:1;6098:8;:12;6090:59;;;::::0;-1:-1:-1;;;6090:59:2;;14969:2:32;6090:59:2::1;::::0;::::1;14951:21:32::0;15008:2;14988:18;;;14981:30;15047:34;15027:18;;;15020:62;-1:-1:-1;;;15098:18:32;;;15091:32;15140:19;;6090:59:2::1;14767:398:32::0;6090:59:2::1;6168:63;-1:-1:-1::0;;;;;6168:9:2::1;:31;6208:11;6222:8:::0;6168:31:::1;:63::i;:::-;-1:-1:-1::0;6264:8:2;;-1:-1:-1;;;;;3795:2485:2;;;;;;;;:::o;1069:29:1:-;;;;;;;;;;;1618:173:0;1337:11:2;-1:-1:-1;;;;;1337:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:33:2;:10;-1:-1:-1;;;;;1323:33:2;;:71;;;-1:-1:-1;1360:10:2;-1:-1:-1;;;;;1382:11:2;1360:34;;1323:71;1315:88;;;;-1:-1:-1;;;1315:88:2;;;;;;;:::i;:::-;1700:17:0::1;:15;;::::0;;::::1;::::0;::::1;:9:::0;:15:::1;:::i;:::-;;:17::i;:::-;1738:9:::0;1727:8:::1;:20;1738:9:::0;1727:8;:20:::1;:::i;:::-;;;;1762:22;1774:9;1762:22;;;;;;:::i;:::-;;;;;;;;1618:173:::0;:::o;404:247:23:-;-1:-1:-1;;;404:247:23;;;;;;;;:::o;2518:154:1:-;1337:11:2;-1:-1:-1;;;;;1337:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:33:2;:10;-1:-1:-1;;;;;1323:33:2;;:71;;;-1:-1:-1;1360:10:2;-1:-1:-1;;;;;1382:11:2;1360:34;;1323:71;1315:88;;;;-1:-1:-1;;;1315:88:2;;;;;;;:::i;:::-;2596:13:1::1;:11;;::::0;;::::1;::::0;::::1;:5:::0;:11:::1;:::i;:::-;;:13::i;:::-;2631:5:::0;2619:9:::1;:17;2631:5:::0;2619:9;:17:::1;:::i;:::-;;;;2651:14;2659:5;2651:14;;;;;;:::i;8011:110:2:-:0;-1:-1:-1;;;;;8087:17:2;;;;;;:10;:17;;;;;:27;;8108:6;;8087:17;:27;;8108:6;;8087:27;:::i;:::-;;;;-1:-1:-1;;;;8011:110:2:o;1655:83::-;1469:10;-1:-1:-1;;;;;1491:11:2;1469:34;;1461:59;;;;-1:-1:-1;;;1461:59:2;;;;;;;:::i;:::-;1717:10:::1;1723:3;1717:5;:10::i;:::-;1655:83:::0;:::o;1557:279:14:-;1645:9;:16;;;-1:-1:-1;;;;;1632:38:14;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1632:40:14;;;;;;;;-1:-1:-1;;1632:40:14;;;;;;;;;;;;:::i;:::-;;;1628:109;;1710:24;;-1:-1:-1;;;1710:24:14;;26468:2:32;1710:24:14;;;26450:21:32;26507:2;26487:18;;;26480:30;-1:-1:-1;;;26526:18:32;;;26519:44;26580:18;;1710:24:14;26266:338:32;1628:109:14;1673:20;1150:4;1754:9;:24;;;:46;;;;1746:83;;;;-1:-1:-1;;;1746:83:14;;26811:2:32;1746:83:14;;;26793:21:32;26850:2;26830:18;;;26823:30;26889:26;26869:18;;;26862:54;26933:18;;1746:83:14;26609:348:32;1925:1784:4;2221:8:1;:30;2205:13;;:46;;-1:-1:-1;;;2221:30:1;;-1:-1:-1;;;;;2221:30:1;;2205:46;:::i;:::-;2189:12;:62;;:75;;;;;2256:8;:6;:8::i;:::-;2255:9;2189:75;2185:107;;;1997:22:4::1;2022:14;:12;:14::i;:::-;1997:39;;2093:15;:13;:15::i;:::-;2154:13;::::0;-1:-1:-1;;;;;2154:13:4::1;2142:9;::::0;2256:865:::1;2273:12;2269:1;:16;2256:865;;;2361:18;2382:6;2389:1;2382:9;;;;;;;:::i;:::-;;::::0;2425:36:::1;::::0;-1:-1:-1;;;2425:36:4;;2455:4:::1;2425:36;::::0;::::1;1055:51:32::0;-1:-1:-1;;;;;2382:9:4;;::::1;::::0;-1:-1:-1;2382:9:4::1;::::0;;;2425:21:::1;::::0;1028:18:32;;2425:36:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2405:56;;2505:9;-1:-1:-1::0;;;;;2490:24:4::1;:11;-1:-1:-1::0;;;;;2490:24:4::1;;2486:76;;;2532:30;2545:17:::0;2532:30;::::1;:::i;:::-;;;2486:76;2643:4;2631:9;:16;2627:484;;;2677:4;::::0;-1:-1:-1;2749:71:4::1;:9;2770:8;2780:10;2792:11:::0;2805:9;2816:3;2749:20:::1;:71::i;:::-;2737:83;;2935:123;2958:8;2968:9;2979:11;2999:42;3052:4;2935:22;:123::i;:::-;2292:829;;2287:3;;;;;:::i;:::-;;;;2256:865;;;;3135:7;3131:534;;;3386:36;::::0;-1:-1:-1;;;3386:36:4;;3416:4:::1;3386:36;::::0;::::1;1055:51:32::0;3267:42:4::1;::::0;3239:18:::1;::::0;3267:42;;3386:21:::1;::::0;1028:18:32;;3386:36:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3362:60:::0;-1:-1:-1;3482:60:4::1;-1:-1:-1::0;;;;;3482:23:4;::::1;3514:11;3362:60:::0;3482:23:::1;:60::i;:::-;3557:37;::::0;-1:-1:-1;;;3557:37:4;;3577:1:::1;3557:37;::::0;::::1;5421:25:32::0;5462:18;;;5455:34;;;3557:11:4::1;-1:-1:-1::0;;;;;3557:19:4::1;::::0;::::1;::::0;5394:18:32;;3557:37:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3144:521;;3131:534;-1:-1:-1::0;;3690:12:4::1;3674:13;:28:::0;-1:-1:-1;1925:1784:4;:::o;4544:698:1:-;4589:15;4607:14;:12;:14::i;:::-;4589:32;-1:-1:-1;4635:12:1;4631:25;;4649:7;4544:698::o;4631:25::-;4674:20;4697:18;:16;:18::i;:::-;4674:41;;4734:22;4748:7;4734:13;:22::i;:::-;4830:19;4852:18;:16;:18::i;:::-;5144:8;:23;4830:40;;-1:-1:-1;5170:5:1;;-1:-1:-1;;;5144:23:1;;;;5118:22;5133:7;5118:12;:22;:::i;:::-;5117:50;;;;:::i;:::-;:58;;;;:::i;:::-;5100:13;;-1:-1:-1;;;;;5100:13:1;5083:14;:12;:14::i;:::-;5069:28;;:11;:28;:::i;:::-;:44;;;;:::i;:::-;:106;;5061:158;;;;-1:-1:-1;;;5061:158:1;;27436:2:32;5061:158:1;;;27418:21:32;27475:2;27455:18;;;27448:30;27514:29;27494:18;;;27487:57;27561:18;;5061:158:1;27234:351:32;5061:158:1;5229:7;;;4544:698::o;754:3983:8:-;866:14;;;-1:-1:-1;;1373:1:8;1370;1363:20;1412:1;1409;1405:9;1396:18;;1463:5;1459:2;1456:13;1448:5;1444:2;1440:14;1436:34;1427:43;;;1552:5;1561:1;1552:10;1548:179;;;1600:1;1586:11;:15;1578:24;;;;;;-1:-1:-1;1653:23:8;;;;-1:-1:-1;1703:13:8;;1548:179;1854:5;1840:11;:19;1832:28;;;;;;2137:17;2213:11;2210:1;2207;2200:25;2616:31;;2650:1;2616:35;;;2615:51;;2772:22;;;;;2385:21;;;2920:16;;;2342:20;;;;2331:32;;;2600:12;3188;;;3184:23;;;;3180:31;;;3247:12;;;;3238:21;;;;3636:1;:15;;3655:1;3635:21;;;3898:17;;;3894:21;;3887:28;3960:17;;;3956:21;;3949:28;4023:17;;;4019:21;;4012:28;4086:17;;;4082:21;;4075:28;4149:17;;;4145:21;;4138:28;4213:17;;;4209:21;;;4202:28;4709:11;;-1:-1:-1;;754:3983:8;;;;;;:::o;2678:123:1:-;2760:34;;-1:-1:-1;;;2760:34:1;;2788:4;2760:34;;;1055:51:32;2734:7:1;;2760:9;-1:-1:-1;;;;;2760:19:1;;;;1028:18:32;;2760:34:1;893:219:32;4740:243:4;4840:102;;;4917:10;-1:-1:-1;;;;;11297:32:32;;;4840:102:4;;;11279:51:32;4929:3:4;11346:18:32;;;;11339:34;;;;4840:102:4;;;;;;;;;;11252:18:32;;;;4840:102:4;;;;;;;;-1:-1:-1;;;;;4840:102:4;-1:-1:-1;;;4840:102:4;;;4803:173;;;;;;;;;;;;;;;;;;4811:6;4803:36;;;;4840:102;4803:36;:173::i;634:205:26:-;773:58;;-1:-1:-1;;;;;11297:32:32;;773:58:26;;;11279:51:32;11346:18;;;11339:34;;;746:86:26;;766:5;;-1:-1:-1;;;796:23:26;11252:18:32;;773:58:26;;;;-1:-1:-1;;773:58:26;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:26;-1:-1:-1;;;;;;773:58:26;;;;;;;;;;746:19;:86::i;4267:240:4:-;4373:102;;;4441:10;-1:-1:-1;;;;;27810:32:32;;;4373:102:4;;;27792:51:32;4453:3:4;27859:18:32;;;27852:34;27902:18;;;;27895:34;;;4373:102:4;;;;;;;;;;27765:18:32;;;;4373:102:4;;;;;;;;-1:-1:-1;;;;;4373:102:4;-1:-1:-1;;;4373:102:4;;;4336:164;;;;;;;;;;;-1:-1:-1;;;4336:164:4;;;;;;4344:6;4336:36;;;;4373:102;4336:36;:164::i;:::-;;4267:240;:::o;5019:315:8:-;5141:14;5176:25;5183:1;5186;5189:11;5176:6;:25::i;:::-;5167:34;;5243:1;5228:11;5215:25;;;;;:::i;:::-;5225:1;5222;5215:25;:29;5211:117;;;-1:-1:-1;;5268:6:8;:26;5260:35;;;;;;5309:8;;;;:::i;1955:310:26:-;2104:39;;-1:-1:-1;;;2104:39:26;;2128:4;2104:39;;;28152:34:32;-1:-1:-1;;;;;28222:15:32;;;28202:18;;;28195:43;2081:20:26;;2146:5;;2104:15;;;;;28087:18:32;;2104:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;;;:::i;:::-;2188:69;;-1:-1:-1;;;;;11297:32:32;;2188:69:26;;;11279:51:32;11346:18;;;11339:34;;;2081:70:26;;-1:-1:-1;2161:97:26;;2181:5;;-1:-1:-1;;;2211:22:26;11252:18:32;;2188:69:26;11105:274:32;2161:97:26;2071:194;1955:310;;;:::o;1224:327:14:-;1295:12;;;;:21;;;-1:-1:-1;;;;;1295:35:14;1287:70;;;;-1:-1:-1;;;1287:70:14;;28451:2:32;1287:70:14;;;28433:21:32;28490:2;28470:18;;;28463:30;-1:-1:-1;;;28509:18:32;;;28502:52;28571:18;;1287:70:14;28249:346:32;1287:70:14;1375:10;;;;:19;;;-1:-1:-1;;;;;1375:33:14;1367:69;;;;-1:-1:-1;;;1367:69:14;;28802:2:32;1367:69:14;;;28784:21:32;28841:2;28821:18;;;28814:30;28880:25;28860:18;;;28853:53;28923:18;;1367:69:14;28600:347:32;1367:69:14;1004:5;1492;:10;;;:15;;;1472:5;:12;;;:17;;;1454:5;:10;;;:15;;;:35;;;;:::i;:::-;:53;;;;:::i;:::-;:70;;;;1446:98;;;;-1:-1:-1;;;1446:98:14;;29383:2:32;1446:98:14;;;29365:21:32;29422:2;29402:18;;;29395:30;-1:-1:-1;;;29441:18:32;;;29434:45;29496:18;;1446:98:14;29181:339:32;4517:213:4;4607:92;;;4674:10;-1:-1:-1;;;;;11297:32:32;;;4607:92:4;;;11279:51:32;4686:3:4;11346:18:32;;;;11339:34;;;;4607:92:4;;;;;;;;;;11252:18:32;;;;4607:92:4;;;;;;;;-1:-1:-1;;;;;4607:92:4;-1:-1:-1;;;4607:92:4;;;4570:153;;;;;;;;;;;-1:-1:-1;;;4570:153:4;;;;;;4578:6;4570:36;;;;4607:92;4570:36;:153::i;821:1311:15:-;1048:9;;;:15;1075:18;;;;1041:53;;-1:-1:-1;;;1041:53:15;;-1:-1:-1;;;;;1075:18:15;;;1041:53;;;1055:51:32;995:14:15;;;;1048:15;;1041:33;;1028:18:32;;1041:53:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1200:14;;;;1117:10;;-1:-1:-1;1021:73:15;;-1:-1:-1;1173:11:15;;778:5;;1187:27;;-1:-1:-1;;;1200:14:15;;;;1117:10;1187:27;:::i;:::-;:37;;;;:::i;:::-;1173:51;-1:-1:-1;1238:7:15;;1234:131;;1299:9;;;:15;1261:59;;1270:8;;1280:3;;1285:12;;-1:-1:-1;;;;;1299:15:15;1316:3;1261:8;:59::i;:::-;1334:16;1347:3;1334:16;;:::i;:::-;;;1234:131;1423:16;;;;778:5;;1410:29;;-1:-1:-1;;;1423:16:15;;;;1410:10;:29;:::i;:::-;:39;;;;:::i;:::-;1404:45;-1:-1:-1;1463:7:15;;1459:202;;1540:9;;;:15;1486:130;;1495:8;;1505:3;;1510:12;;-1:-1:-1;;;;;1524:31:15;;;1540:15;;1524:31;:69;;1576:11;;;:17;-1:-1:-1;;;;;1576:17:15;1524:69;;;1558:9;;;:15;-1:-1:-1;;;;;1558:15:15;1524:69;1595:20;;;;-1:-1:-1;;;;;1595:20:15;1486:8;:130::i;:::-;1630:16;1643:3;1630:16;;:::i;:::-;;;1459:202;1720:14;;;;778:5;;1707:27;;-1:-1:-1;;;1720:14:15;;;;1707:10;:27;:::i;:::-;:37;;;;:::i;:::-;1701:43;-1:-1:-1;1758:7:15;;1754:146;;1819:9;;;:15;1836:18;;;;1781:74;;1790:8;;1800:3;;1805:12;;-1:-1:-1;;;;;1819:15:15;;;;1836:18;1781:8;:74::i;:::-;1869:16;1882:3;1869:16;;:::i;:::-;;;1754:146;1964:39;;-1:-1:-1;;;;;1964:39:15;;;;;;-1:-1:-1;;1964:39:15;;;;;;2053:9;;;:15;2080:18;;;;2046:53;;-1:-1:-1;;;2046:53:15;;-1:-1:-1;;;;;2080:18:15;;;2046:53;;;1055:51:32;2102:12:15;;2053:15;;;;;2046:33;;1028:18:32;;2046:53:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2017:98;;-1:-1:-1;;;;;2017:98:15;;;2046:68;;;;-1:-1:-1;;;2017:98:15;;;;;;;;;;;;;;;-1:-1:-1;821:1311:15;;-1:-1:-1;;;;;;821:1311:15:o;2138:2512::-;2402:7;-1:-1:-1;;;;;2391:18:15;:7;-1:-1:-1;;;;;2391:18:15;;2387:172;;;-1:-1:-1;;;;;2429:20:15;;2444:4;2429:20;2425:103;;2492:36;-1:-1:-1;;;;;2492:20:15;;2513:3;2518:9;2492:20;:36::i;:::-;2542:7;;2387:172;2592:18;;;;2635:15;;2592:96;;-1:-1:-1;;;2592:96:15;;-1:-1:-1;;;;;2635:15:15;;;2592:96;;;29765:34:32;29835:15;;;29815:18;;;29808:43;29887:15;;;29867:18;;;29860:43;2568:21:15;;-1:-1:-1;;;2592:18:15;;;;;;:34;;29700:18:32;;2592:96:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2592:96:15;;;;;;;;;;;;:::i;:::-;2568:120;;2911:15;2938:106;2960:4;:11;2952:7;:19;2938:106;;;3024:1;-1:-1:-1;;;;;3001:25:15;:4;3006:7;3001:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3001:25:15;;2997:36;;;3028:5;;2997:36;2973:9;;;;:::i;:::-;;;;2938:106;;;3053:30;3100:7;-1:-1:-1;;;;;3086:22:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3086:22:15;;3053:55;;3123:9;3118:84;3138:7;3136:1;:9;3118:84;;;3184:4;3189:1;3184:7;;;;;;;;:::i;:::-;;;;;;;3166:13;3180:1;3166:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3166:25:15;;;:16;;;;;;;;;;;:25;3147:3;;;;:::i;:::-;;;;3118:84;;;-1:-1:-1;3338:15:15;;:55;;-1:-1:-1;;;3338:55:15;;3311:24;;-1:-1:-1;;;;;3338:15:15;;:29;;:55;;3368:9;;3379:13;;3338:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3338:55:15;;;;;;;;;;;;:::i;:::-;3453:23;;3431:14;;;;-1:-1:-1;3403:17:15;;3479:5;;-1:-1:-1;;;3453:23:15;;;;;3431:14;;:18;;3448:1;;3431:18;:::i;:::-;3423:27;;;;;;;;:::i;:::-;;;;;;;:53;;;;:::i;:::-;:61;;;;:::i;:::-;3602:15;;3403:81;;-1:-1:-1;3556:74:15;;-1:-1:-1;;;;;3556:37:15;;;;3602:15;3620:9;3556:37;:74::i;:::-;3672:15;;3664:24;;-1:-1:-1;;;;;3672:15:15;3664:7;:24::i;:::-;-1:-1:-1;;;;;3653:35:15;:7;-1:-1:-1;;;;;3653:35:15;;;:55;;;-1:-1:-1;;;;;;3692:14:15;;1034:20:27;1080:8;;3692:16:15;3649:994;;;3729:22;;;;-1:-1:-1;;;3729:22:15;;;;3725:405;;;3789:15;;:149;;-1:-1:-1;;;3789:149:15;;-1:-1:-1;;;;;3789:15:15;;;;:69;;:149;;3880:9;;3891;;3902:13;;3917:3;;3922:15;;3789:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3649:994;;3725:405;3996:15;;:119;;-1:-1:-1;;;3996:119:15;;-1:-1:-1;;;;;3996:15:15;;;;:40;;:119;;4058:9;;4068;;4079:13;;4094:3;;4099:15;;3996:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3996:119:15;;;;;;;;;;;;:::i;:::-;;3649:994;;;4226:22;;;;-1:-1:-1;;;4226:22:15;;;;4222:399;;;4286:15;;:146;;-1:-1:-1;;;4286:146:15;;-1:-1:-1;;;;;4286:15:15;;;;:66;;:146;;4374:9;;4385;;4396:13;;4411:3;;4416:15;;4286:146;;;:::i;4222:399::-;4490:15;;:116;;-1:-1:-1;;;4490:116:15;;-1:-1:-1;;;;;4490:15:15;;;;:37;;:116;;4549:9;;4559;;4570:13;;4585:3;;4590:15;;4490:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4490:116:15;;;;;;;;;;;;:::i;:::-;;4222:399;2307:2343;;;;;2138:2512;;;;;;:::o;1346:603:26:-;1701:10;;;1700:62;;-1:-1:-1;1717:39:26;;-1:-1:-1;;;1717:39:26;;1741:4;1717:39;;;28152:34:32;-1:-1:-1;;;;;28222:15:32;;;28202:18;;;28195:43;1717:15:26;;;;;28087:18:32;;1717:39:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;1700:62;1679:163;;;;-1:-1:-1;;;1679:163:26;;33345:2:32;1679:163:26;;;33327:21:32;33384:2;33364:18;;;33357:30;33423:34;33403:18;;;33396:62;-1:-1:-1;;;33474:18:32;;;33467:52;33536:19;;1679:163:26;33143:418:32;1679:163:26;1879:62;;-1:-1:-1;;;;;11297:32:32;;1879:62:26;;;11279:51:32;11346:18;;;11339:34;;;1852:90:26;;1872:5;;-1:-1:-1;;;1902:22:26;11252:18:32;;1879:62:26;11105:274:32;3860:397:4;4017:52;-1:-1:-1;;;;;4017:9:4;:31;4049:10;4061:7;4017:31;:52::i;:::-;4125:101;;;4192:10;-1:-1:-1;;;;;27810:32:32;;;4125:101:4;;;27792:51:32;4204:3:4;27859:18:32;;;27852:34;27902:18;;;;27895:34;;;4125:101:4;;;;;;;;;;27765:18:32;;;;4125:101:4;;;;;;;;-1:-1:-1;;;;;4125:101:4;-1:-1:-1;;;4125:101:4;;;4088:162;;;;;;;;;;;-1:-1:-1;;;4088:162:4;;;;;;4096:6;4088:36;;;;4125:101;6554:387:27;6695:12;1034:20;;6719:69;;;;-1:-1:-1;;;6719:69:27;;33768:2:32;6719:69:27;;;33750:21:32;33807:2;33787:18;;;33780:30;33846:34;33826:18;;;33819:62;-1:-1:-1;;;33897:18:32;;;33890:36;33943:19;;6719:69:27;33566:402:32;6719:69:27;6800:12;6814:23;6841:6;-1:-1:-1;;;;;6841:19:27;6861:4;6841:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6799:67;;;;6883:51;6900:7;6909:10;6921:12;6883:16;:51::i;:::-;6876:58;6554:387;-1:-1:-1;;;;;;6554:387:27:o;3140:706:26:-;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:26;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:26;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:26;;34717:2:32;3744:85:26;;;34699:21:32;34756:2;34736:18;;;34729:30;34795:34;34775:18;;;34768:62;-1:-1:-1;;;34846:18:32;;;34839:40;34896:19;;3744:85:26;34515:406:32;5789:240:15;5849:6;5884;-1:-1:-1;;;;;5871:25:15;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5871:27:15;;;;;;;;-1:-1:-1;;5871:27:15;;;;;;;;;;;;:::i;:::-;;;5867:156;;-1:-1:-1;702:42:15;;5789:240;-1:-1:-1;5789:240:15:o;5867:156::-;5789:240;;;:::o;7161:692:27:-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:27;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:27;;;;;;;;:::i;3461:223::-;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3594;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:27;;35923:2:32;4828:60:27;;;35905:21:32;35962:2;35942:18;;;35935:30;36001:31;35981:18;;;35974:59;36050:18;;4828:60:27;35721:353:32;4828:60:27;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:27;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:27:o;14:286:32:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:32;;209:43;;199:71;;266:1;263;256:12;1117:131;-1:-1:-1;;;;;1192:31:32;;1182:42;;1172:70;;1238:1;1235;1228:12;1253:247;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;1420:9;1407:23;1439:31;1464:5;1439:31;:::i;1505:525::-;1591:6;1599;1607;1615;1668:3;1656:9;1647:7;1643:23;1639:33;1636:53;;;1685:1;1682;1675:12;1636:53;1724:9;1711:23;1743:31;1768:5;1743:31;:::i;:::-;1793:5;-1:-1:-1;1850:2:32;1835:18;;1822:32;1863:33;1822:32;1863:33;:::i;:::-;1505:525;;1915:7;;-1:-1:-1;;;;1969:2:32;1954:18;;1941:32;;2020:2;2005:18;1992:32;;1505:525::o;2243:180::-;2302:6;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;-1:-1:-1;2394:23:32;;2243:180;-1:-1:-1;2243:180:32:o;2651:383::-;2728:6;2736;2744;2797:2;2785:9;2776:7;2772:23;2768:32;2765:52;;;2813:1;2810;2803:12;2765:52;2852:9;2839:23;2871:31;2896:5;2871:31;:::i;:::-;2921:5;2973:2;2958:18;;2945:32;;-1:-1:-1;3024:2:32;3009:18;;;2996:32;;2651:383;-1:-1:-1;;;2651:383:32:o;3039:315::-;3107:6;3115;3168:2;3156:9;3147:7;3143:23;3139:32;3136:52;;;3184:1;3181;3174:12;3136:52;3223:9;3210:23;3242:31;3267:5;3242:31;:::i;:::-;3292:5;3344:2;3329:18;;;;3316:32;;-1:-1:-1;;;3039:315:32:o;3683:274::-;3799:12;;-1:-1:-1;;;;;3795:21:32;;;3783:34;;3870:4;3859:16;;;3853:23;3849:32;;;3833:14;;;3826:56;3935:4;3924:16;;;3918:23;3943:6;3914:36;3898:14;;3891:60;3683:274::o;3962:681::-;4388:3;4373:19;;4401:45;4377:9;4428:6;4401:45;:::i;:::-;4455:54;4505:2;4494:9;4490:18;4482:6;4455:54;:::i;:::-;4518:55;4568:3;4557:9;4553:19;4545:6;4518:55;:::i;:::-;4582;4632:3;4621:9;4617:19;4609:6;4582:55;:::i;4648:594::-;4743:6;4751;4759;4767;4775;4828:3;4816:9;4807:7;4803:23;4799:33;4796:53;;;4845:1;4842;4835:12;4796:53;4884:9;4871:23;4903:31;4928:5;4903:31;:::i;:::-;4953:5;-1:-1:-1;5010:2:32;4995:18;;4982:32;5023:33;4982:32;5023:33;:::i;:::-;4648:594;;5075:7;;-1:-1:-1;;;;5129:2:32;5114:18;;5101:32;;5180:2;5165:18;;5152:32;;5231:3;5216:19;;;5203:33;;-1:-1:-1;4648:594:32:o;5728:200::-;5820:6;5873:3;5861:9;5852:7;5848:23;5844:33;5841:53;;;5890:1;5887;5880:12;5841:53;-1:-1:-1;5913:9:32;5728:200;-1:-1:-1;5728:200:32:o;5933:127::-;5994:10;5989:3;5985:20;5982:1;5975:31;6025:4;6022:1;6015:15;6049:4;6046:1;6039:15;6065:275;6136:2;6130:9;6201:2;6182:13;;-1:-1:-1;;6178:27:32;6166:40;;-1:-1:-1;;;;;6221:34:32;;6257:22;;;6218:62;6215:88;;;6283:18;;:::i;:::-;6319:2;6312:22;6065:275;;-1:-1:-1;6065:275:32:o;6345:183::-;6405:4;-1:-1:-1;;;;;6430:6:32;6427:30;6424:56;;;6460:18;;:::i;:::-;-1:-1:-1;6505:1:32;6501:14;6517:4;6497:25;;6345:183::o;6533:662::-;6587:5;6640:3;6633:4;6625:6;6621:17;6617:27;6607:55;;6658:1;6655;6648:12;6607:55;6694:6;6681:20;6720:4;6744:60;6760:43;6800:2;6760:43;:::i;:::-;6744:60;:::i;:::-;6838:15;;;6924:1;6920:10;;;;6908:23;;6904:32;;;6869:12;;;;6948:15;;;6945:35;;;6976:1;6973;6966:12;6945:35;7012:2;7004:6;7000:15;7024:142;7040:6;7035:3;7032:15;7024:142;;;7106:17;;7094:30;;7144:12;;;;7057;;7024:142;;;-1:-1:-1;7184:5:32;6533:662;-1:-1:-1;;;;;;6533:662:32:o;7200:530::-;7242:5;7295:3;7288:4;7280:6;7276:17;7272:27;7262:55;;7313:1;7310;7303:12;7262:55;7349:6;7336:20;-1:-1:-1;;;;;7371:2:32;7368:26;7365:52;;;7397:18;;:::i;:::-;7441:55;7484:2;7465:13;;-1:-1:-1;;7461:27:32;7490:4;7457:38;7441:55;:::i;:::-;7521:2;7512:7;7505:19;7567:3;7560:4;7555:2;7547:6;7543:15;7539:26;7536:35;7533:55;;;7584:1;7581;7574:12;7533:55;7649:2;7642:4;7634:6;7630:17;7623:4;7614:7;7610:18;7597:55;7697:1;7672:16;;;7690:4;7668:27;7661:38;;;;7676:7;7200:530;-1:-1:-1;;;7200:530:32:o;7735:1071::-;7889:6;7897;7905;7913;7921;7974:3;7962:9;7953:7;7949:23;7945:33;7942:53;;;7991:1;7988;7981:12;7942:53;8030:9;8017:23;8049:31;8074:5;8049:31;:::i;:::-;8099:5;-1:-1:-1;8156:2:32;8141:18;;8128:32;8169:33;8128:32;8169:33;:::i;:::-;8221:7;-1:-1:-1;8279:2:32;8264:18;;8251:32;-1:-1:-1;;;;;8332:14:32;;;8329:34;;;8359:1;8356;8349:12;8329:34;8382:61;8435:7;8426:6;8415:9;8411:22;8382:61;:::i;:::-;8372:71;;8496:2;8485:9;8481:18;8468:32;8452:48;;8525:2;8515:8;8512:16;8509:36;;;8541:1;8538;8531:12;8509:36;8564:63;8619:7;8608:8;8597:9;8593:24;8564:63;:::i;:::-;8554:73;;8680:3;8669:9;8665:19;8652:33;8636:49;;8710:2;8700:8;8697:16;8694:36;;;8726:1;8723;8716:12;8694:36;;8749:51;8792:7;8781:8;8770:9;8766:24;8749:51;:::i;:::-;8739:61;;;7735:1071;;;;;;;;:::o;9018:196::-;9106:6;9159:3;9147:9;9138:7;9134:23;9130:33;9127:53;;;9176:1;9173;9166:12;10366:734;10470:6;10478;10486;10494;10502;10555:3;10543:9;10534:7;10530:23;10526:33;10523:53;;;10572:1;10569;10562:12;10523:53;10611:9;10598:23;10630:31;10655:5;10630:31;:::i;:::-;10680:5;-1:-1:-1;10737:2:32;10722:18;;10709:32;10750:33;10709:32;10750:33;:::i;:::-;10802:7;-1:-1:-1;10856:2:32;10841:18;;10828:32;;-1:-1:-1;10907:2:32;10892:18;;10879:32;;-1:-1:-1;10962:3:32;10947:19;;10934:33;-1:-1:-1;;;;;10979:30:32;;10976:50;;;11022:1;11019;11012:12;10976:50;11045:49;11086:7;11077:6;11066:9;11062:22;11045:49;:::i;11384:184::-;11454:6;11507:2;11495:9;11486:7;11482:23;11478:32;11475:52;;;11523:1;11520;11513:12;11475:52;-1:-1:-1;11546:16:32;;11384:184;-1:-1:-1;11384:184:32:o;11573:336::-;11775:2;11757:21;;;11814:2;11794:18;;;11787:30;-1:-1:-1;;;11848:2:32;11833:18;;11826:42;11900:2;11885:18;;11573:336::o;11914:127::-;11975:10;11970:3;11966:20;11963:1;11956:31;12006:4;12003:1;11996:15;12030:4;12027:1;12020:15;12046:125;12086:4;12114:1;12111;12108:8;12105:34;;;12119:18;;:::i;:::-;-1:-1:-1;12156:9:32;;12046:125::o;12534:251::-;12604:6;12657:2;12645:9;12636:7;12632:23;12628:32;12625:52;;;12673:1;12670;12663:12;12625:52;12705:9;12699:16;12724:31;12749:5;12724:31;:::i;12790:327::-;12992:2;12974:21;;;13031:1;13011:18;;;13004:29;-1:-1:-1;;;13064:2:32;13049:18;;13042:34;13108:2;13093:18;;12790:327::o;13122:128::-;13162:3;13193:1;13189:6;13186:1;13183:13;13180:39;;;13199:18;;:::i;:::-;-1:-1:-1;13235:9:32;;13122:128::o;13606:168::-;13646:7;13712:1;13708;13704:6;13700:14;13697:1;13694:21;13689:1;13682:9;13675:17;13671:45;13668:71;;;13719:18;;:::i;:::-;-1:-1:-1;13759:9:32;;13606:168::o;13779:127::-;13840:10;13835:3;13831:20;13828:1;13821:31;13871:4;13868:1;13861:15;13895:4;13892:1;13885:15;13911:217;13951:1;13977;13967:132;;14021:10;14016:3;14012:20;14009:1;14002:31;14056:4;14053:1;14046:15;14084:4;14081:1;14074:15;13967:132;-1:-1:-1;14113:9:32;;13911:217::o;14394:118::-;14480:5;14473:13;14466:21;14459:5;14456:32;14446:60;;14502:1;14499;14492:12;14517:245;14584:6;14637:2;14625:9;14616:7;14612:23;14608:32;14605:52;;;14653:1;14650;14643:12;14605:52;14685:9;14679:16;14704:28;14726:5;14704:28;:::i;15170:117::-;15255:6;15248:5;15244:18;15237:5;15234:29;15224:57;;15277:1;15274;15267:12;15292:129;-1:-1:-1;;;;;15370:5:32;15366:30;15359:5;15356:41;15346:69;;15411:1;15408;15401:12;15426:135;-1:-1:-1;;;;;15504:5:32;15500:36;15493:5;15490:47;15480:75;;15551:1;15548;15541:12;15566:132;15633:20;;15662:30;15633:20;15662:30;:::i;15703:128::-;15768:20;;15797:28;15768:20;15797:28;:::i;15836:145::-;15915:20;;15944:31;15915:20;15944:31;:::i;15986:1156::-;16076:6;16129:3;16117:9;16108:7;16104:23;16100:33;16097:53;;;16146:1;16143;16136:12;16097:53;16179:2;16173:9;16221:3;16213:6;16209:16;16291:6;16279:10;16276:22;-1:-1:-1;;;;;16243:10:32;16240:34;16237:62;16234:88;;;16302:18;;:::i;:::-;16338:2;16331:22;16375:23;;16407:31;16375:23;16407:31;:::i;:::-;16447:21;;16520:2;16505:18;;16492:32;16533;16492;16533;:::i;:::-;16593:2;16581:15;;16574:32;16658:2;16643:18;;16630:32;16671;16630;16671;:::i;:::-;16731:2;16719:15;;16712:32;16796:2;16781:18;;16768:32;16809;16768;16809;:::i;:::-;16869:2;16857:15;;16850:32;16916:38;16949:3;16934:19;;16916:38;:::i;:::-;16910:3;16902:6;16898:16;16891:64;16989:36;17020:3;17009:9;17005:19;16989:36;:::i;:::-;16983:3;16975:6;16971:16;16964:62;17060:50;17105:3;17094:9;17090:19;17060:50;:::i;:::-;17054:3;17042:16;;17035:76;17046:6;15986:1156;-1:-1:-1;;;15986:1156:32:o;17147:223::-;17279:11;;-1:-1:-1;;;;;;17275:54:32;-1:-1:-1;;;;;17331:31:32;;;;17272:91;;;;17259:105;;17147:223::o;17375:204::-;17467:11;;-1:-1:-1;;;;17503:29:32;17559:3;17538:15;;;;-1:-1:-1;;;17534:37:32;17500:72;;;;17487:86;;17375:204::o;17584:174::-;17628:11;17680:3;17667:17;17693:30;17717:5;17693:30;:::i;17959:170::-;18001:11;18053:3;18040:17;18066:28;18088:5;18066:28;:::i;18348:187::-;18404:11;18456:3;18443:17;18469:31;18494:5;18469:31;:::i;18794:1345::-;18971:5;18958:19;18986:33;19011:7;18986:33;:::i;:::-;19028:90;19110:7;19104:4;19028:90;:::i;:::-;;19166:2;19159:5;19155:14;19142:28;19179:32;19203:7;19179:32;:::i;:::-;19220:60;19272:7;19266:4;19220:60;:::i;:::-;;19328:2;19321:5;19317:14;19304:28;19341:32;19365:7;19341:32;:::i;:::-;19392:11;;-1:-1:-1;;;;19486:29:32;;19449:3;19426:17;;;;-1:-1:-1;;;19422:39:32;19483:37;;;19470:51;;19569:2;19558:14;;19545:28;19582:32;19545:28;19582:32;:::i;:::-;-1:-1:-1;;;;;19642:28:32;;;;19639:36;;;19704:3;19681:17;;;;-1:-1:-1;;;;;;19677:52:32;19636:94;19623:108;;19667:1;19758:12;;19779:102;19837:43;19875:3;19864:15;;19837:43;:::i;:::-;17865:11;;-1:-1:-1;;17861:47:32;-1:-1:-1;;;;;17910:36:32;;;;17858:89;17845:103;;17763:191;19779:102;19890:96;19944:41;19980:3;19973:5;19969:15;19944:41;:::i;:::-;19932:10;18222:11;;-1:-1:-1;;;;18258:26:32;18305:13;;18298:21;18326:2;18290:30;-1:-1:-1;;;18286:49:32;18255:81;;;;18242:95;;18134:209;19890:96;19995:138;20077:55;20127:3;20120:5;20116:15;20077:55;:::i;:::-;18656:11;;18753:26;18692:35;18737:2;18733:14;;;;-1:-1:-1;;18729:52:32;18689:93;18676:107;;18540:249;20144:1272;20342:3;20327:19;;20368:20;;20397:31;20368:20;20397:31;:::i;:::-;-1:-1:-1;;;;;20455:31:32;20437:50;;20536:4;20524:17;;20511:31;20551:32;20511:31;20551:32;:::i;:::-;20602:6;20646:16;;;20639:4;20624:20;;20617:46;20712:4;20700:17;;20687:31;;20727:32;20687:31;20727:32;:::i;:::-;20797:16;20790:4;20775:20;;20768:46;20863:4;20851:17;;20838:31;20878:32;20838:31;20878:32;:::i;:::-;-1:-1:-1;;;;;20948:32:32;20941:4;20926:20;;20919:62;21030:4;21018:17;;21005:31;21045:32;21005:31;21045:32;:::i;:::-;-1:-1:-1;;;;;9510:36:32;21128:4;21113:20;;9498:49;21163:34;21191:4;21179:17;;21163:34;:::i;:::-;375:13;368:21;21251:4;21236:20;;356:34;21288:48;21330:4;21318:17;;21288:48;:::i;:::-;-1:-1:-1;;;;;850:31:32;;21404:4;21389:20;;838:44;21345:65;;20144:1272;;;;:::o;21421:757::-;21476:5;21524:4;21512:9;21507:3;21503:19;21499:30;21496:50;;;21542:1;21539;21532:12;21496:50;21575:2;21569:9;21617:4;21609:6;21605:17;21688:6;21676:10;21673:22;-1:-1:-1;;;;;21640:10:32;21637:34;21634:62;21631:88;;;21699:18;;:::i;:::-;21735:2;21728:22;21768:6;-1:-1:-1;21768:6:32;21798:23;;21830:33;21798:23;21830:33;:::i;:::-;21872:23;;21947:2;21932:18;;21919:32;21960:33;21919:32;21960:33;:::i;:::-;22021:2;22009:15;;22002:32;22086:2;22071:18;;22058:32;22099;22058;22099;:::i;:::-;22159:2;22147:15;;;;22140:32;21421:757;;-1:-1:-1;;21421:757:32:o;22183:737::-;22269:6;22322:3;22310:9;22301:7;22297:23;22293:33;22290:53;;;22339:1;22336;22329:12;22290:53;22372:2;22366:9;22414:4;22406:6;22402:17;22485:6;22473:10;22470:22;-1:-1:-1;;;;;22437:10:32;22434:34;22431:62;22428:88;;;22496:18;;:::i;:::-;22532:2;22525:22;22571:46;22609:7;22598:9;22571:46;:::i;:::-;22563:6;22556:62;22653:55;22700:7;22695:2;22684:9;22680:18;22653:55;:::i;:::-;22646:4;22638:6;22634:17;22627:82;22742:56;22790:7;22784:3;22773:9;22769:19;22742:56;:::i;:::-;22737:2;22729:6;22725:15;22718:81;22832:56;22880:7;22874:3;22863:9;22859:19;22832:56;:::i;:::-;22827:2;22815:15;;22808:81;22819:6;22183:737;-1:-1:-1;;;22183:737:32:o;22925:695::-;23061:5;23048:19;23076:33;23101:7;23076:33;:::i;:::-;23118:90;23200:7;23194:4;23118:90;:::i;:::-;;23245:1;23239:4;23235:12;23295:2;23288:5;23284:14;23271:28;23308:33;23333:7;23308:33;:::i;:::-;23350:96;23438:7;23426:10;23350:96;:::i;:::-;;23494:2;23487:5;23483:14;23470:28;23507:32;23531:7;23507:32;:::i;:::-;23548:66;23606:7;23594:10;23548:66;:::i;23625:1565::-;23794:5;23781:19;23809:33;23834:7;23809:33;:::i;:::-;23851:90;23933:7;23927:4;23851:90;:::i;:::-;;23978:1;23972:4;23968:12;24028:2;24021:5;24017:14;24004:28;24041:33;24066:7;24041:33;:::i;:::-;24083:96;24171:7;24159:10;24083:96;:::i;:::-;;24227:2;24220:5;24216:14;24203:28;24240:32;24264:7;24240:32;:::i;:::-;24281:66;24339:7;24327:10;24281:66;:::i;:::-;;;24395:2;24388:5;24384:14;24371:28;24408:33;24433:7;24408:33;:::i;:::-;24450:98;24540:7;24536:1;24530:4;24526:12;24450:98;:::i;:::-;;24587:1;24581:4;24577:12;24637:3;24630:5;24626:15;24613:29;24651:33;24676:7;24651:33;:::i;:::-;24693:98;24783:7;24769:12;24693:98;:::i;:::-;;24839:3;24832:5;24828:15;24815:29;24853:32;24877:7;24853:32;:::i;:::-;24894:68;24954:7;24940:12;24894:68;:::i;:::-;;;24971:102;25068:3;25061:5;25057:15;25053:1;25047:4;25043:12;24971:102;:::i;:::-;25082;25179:3;25172:5;25168:15;25164:1;25158:4;25154:12;25082:102;:::i;25195:522::-;25294:5;25281:19;25309:33;25334:7;25309:33;:::i;:::-;-1:-1:-1;;;;;25401:16:32;;;25389:29;;25466:4;25455:16;;25442:30;;25481:33;25442:30;25481:33;:::i;:::-;25546:16;25539:4;25530:14;;25523:40;25611:4;25600:16;;25587:30;25626:32;25587:30;25626:32;:::i;:::-;25703:6;25694:7;25690:20;25683:4;25678:3;25674:14;25667:44;;25195:522;;:::o;25722:539::-;25912:3;25897:19;;25925:54;25901:9;25961:6;25925:54;:::i;:::-;25988:76;26058:4;26047:9;26043:20;26036:4;26028:6;26024:17;25988:76;:::i;:::-;26073;26143:4;26132:9;26128:20;26121:4;26113:6;26109:17;26073:76;:::i;:::-;26168:6;26183:72;26251:2;26240:9;26236:18;26231:2;26223:6;26219:15;26183:72;:::i;26962:127::-;27023:10;27018:3;27014:20;27011:1;27004:31;27054:4;27051:1;27044:15;27078:4;27075:1;27068:15;27094:135;27133:3;-1:-1:-1;;27154:17:32;;27151:43;;;27174:18;;:::i;:::-;-1:-1:-1;27221:1:32;27210:13;;27094:135::o;28952:224::-;28991:3;29019:6;29052:2;29049:1;29045:10;29082:2;29079:1;29075:10;29113:3;29109:2;29105:12;29100:3;29097:21;29094:47;;;29121:18;;:::i;:::-;29157:13;;28952:224;-1:-1:-1;;;;28952:224:32:o;29914:956::-;30009:6;30040:2;30083;30071:9;30062:7;30058:23;30054:32;30051:52;;;30099:1;30096;30089:12;30051:52;30132:9;30126:16;-1:-1:-1;;;;;30157:6:32;30154:30;30151:50;;;30197:1;30194;30187:12;30151:50;30220:22;;30273:4;30265:13;;30261:27;-1:-1:-1;30251:55:32;;30302:1;30299;30292:12;30251:55;30331:2;30325:9;30354:60;30370:43;30410:2;30370:43;:::i;30354:60::-;30448:15;;;30530:1;30526:10;;;;30518:19;;30514:28;;;30479:12;;;;30554:19;;;30551:39;;;30586:1;30583;30576:12;30551:39;30610:11;;;;30630:210;30646:6;30641:3;30638:15;30630:210;;;30719:3;30713:10;30736:31;30761:5;30736:31;:::i;:::-;30780:18;;30663:12;;;;30818;;;;30630:210;;30875:461;30928:3;30966:5;30960:12;30993:6;30988:3;30981:19;31019:4;31048:2;31043:3;31039:12;31032:19;;31085:2;31078:5;31074:14;31106:1;31116:195;31130:6;31127:1;31124:13;31116:195;;;31195:13;;-1:-1:-1;;;;;31191:39:32;31179:52;;31251:12;;;;31286:15;;;;31227:1;31145:9;31116:195;;;-1:-1:-1;31327:3:32;;30875:461;-1:-1:-1;;;;;30875:461:32:o;31341:332::-;31548:6;31537:9;31530:25;31591:2;31586;31575:9;31571:18;31564:30;31511:4;31611:56;31663:2;31652:9;31648:18;31640:6;31611:56;:::i;31678:881::-;31773:6;31804:2;31847;31835:9;31826:7;31822:23;31818:32;31815:52;;;31863:1;31860;31853:12;31815:52;31896:9;31890:16;-1:-1:-1;;;;;31921:6:32;31918:30;31915:50;;;31961:1;31958;31951:12;31915:50;31984:22;;32037:4;32029:13;;32025:27;-1:-1:-1;32015:55:32;;32066:1;32063;32056:12;32015:55;32095:2;32089:9;32118:60;32134:43;32174:2;32134:43;:::i;32118:60::-;32212:15;;;32294:1;32290:10;;;;32282:19;;32278:28;;;32243:12;;;;32318:19;;;32315:39;;;32350:1;32347;32340:12;32315:39;32374:11;;;;32394:135;32410:6;32405:3;32402:15;32394:135;;;32476:10;;32464:23;;32427:12;;;;32507;;;;32394:135;;32564:574;32855:6;32844:9;32837:25;32898:6;32893:2;32882:9;32878:18;32871:34;32941:3;32936:2;32925:9;32921:18;32914:31;32818:4;32962:57;33014:3;33003:9;32999:19;32991:6;32962:57;:::i;:::-;-1:-1:-1;;;;;33055:32:32;;;;33050:2;33035:18;;33028:60;-1:-1:-1;33119:3:32;33104:19;33097:35;32954:65;32564:574;-1:-1:-1;;;32564:574:32:o;33973:258::-;34045:1;34055:113;34069:6;34066:1;34063:13;34055:113;;;34145:11;;;34139:18;34126:11;;;34119:39;34091:2;34084:10;34055:113;;;34186:6;34183:1;34180:13;34177:48;;;-1:-1:-1;;34221:1:32;34203:16;;34196:27;33973:258::o;34236:274::-;34365:3;34403:6;34397:13;34419:53;34465:6;34460:3;34453:4;34445:6;34441:17;34419:53;:::i;:::-;34488:16;;;;;34236:274;-1:-1:-1;;34236:274:32:o;34926:383::-;35075:2;35064:9;35057:21;35038:4;35107:6;35101:13;35150:6;35145:2;35134:9;35130:18;35123:34;35166:66;35225:6;35220:2;35209:9;35205:18;35200:2;35192:6;35188:15;35166:66;:::i;:::-;35293:2;35272:15;-1:-1:-1;;35268:29:32;35253:45;;;;35300:2;35249:54;;34926:383;-1:-1:-1;;34926:383:32:o",
    "sourcePath": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/StrategyVHMaximizer.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.10+commit.fc410830"
    },
    "ast": {
        "absolutePath": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/StrategyVHMaximizer.sol",
        "exportedSymbols": {
            "Address": [
                8447
            ],
            "BaseStrategy": [
                182
            ],
            "BaseStrategySwapLogic": [
                613
            ],
            "BaseStrategyVaultHealer": [
                1195
            ],
            "Context": [
                8469
            ],
            "ERC1155": [
                7397
            ],
            "ERC1155Holder": [
                7814
            ],
            "ERC1155Receiver": [
                7848
            ],
            "ERC1155Supply": [
                7748
            ],
            "ERC165": [
                8493
            ],
            "FullMath": [
                3442
            ],
            "IERC1155": [
                7519
            ],
            "IERC1155MetadataURI": [
                7763
            ],
            "IERC1155Receiver": [
                7560
            ],
            "IERC165": [
                8505
            ],
            "IERC20": [
                7926
            ],
            "IStakingPool": [
                3484
            ],
            "IStrategy": [
                3592
            ],
            "ITactic": [
                3636
            ],
            "IUniFactory": [
                4090
            ],
            "IUniPair": [
                5715
            ],
            "IUniRouter01": [
                3944
            ],
            "IUniRouter02": [
                4029
            ],
            "LibMagnetite": [
                4936
            ],
            "LibVaultConfig": [
                5069
            ],
            "LibVaultSwaps": [
                5678
            ],
            "Magnetite": [
                1435
            ],
            "Ownable": [
                6316
            ],
            "PrismLibrary": [
                6212
            ],
            "SafeERC20": [
                8150
            ],
            "StrategyVHMaximizer": [
                1773
            ],
            "VaultFee": [
                4978
            ],
            "VaultFees": [
                4970
            ],
            "VaultHealer": [
                1827
            ],
            "VaultHealerBase": [
                2586
            ],
            "VaultHealerGate": [
                3262
            ],
            "VaultSettings": [
                4957
            ],
            "console": [
                16569
            ]
        },
        "id": 1774,
        "license": "GPL-3.0-or-later",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1437,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".4"
                ],
                "nodeType": "PragmaDirective",
                "src": "45:23:4"
            },
            {
                "absolutePath": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/BaseStrategyVaultHealer.sol",
                "file": "./BaseStrategyVaultHealer.sol",
                "id": 1438,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1774,
                "sourceUnit": 1196,
                "src": "70:39:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/contracts/libs/ITactic.sol",
                "file": "./libs/ITactic.sol",
                "id": 1439,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1774,
                "sourceUnit": 3637,
                "src": "110:28:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
                "file": "/Users/richardjamieson/Documents/GitHub/polycrystal-vaults/node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
                "id": 1440,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1774,
                "sourceUnit": 7815,
                "src": "139:143:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 1441,
                            "name": "BaseStrategyVaultHealer",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1195,
                            "src": "438:23:4"
                        },
                        "id": 1442,
                        "nodeType": "InheritanceSpecifier",
                        "src": "438:23:4"
                    },
                    {
                        "baseName": {
                            "id": 1443,
                            "name": "ERC1155Holder",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7814,
                            "src": "463:13:4"
                        },
                        "id": 1444,
                        "nodeType": "InheritanceSpecifier",
                        "src": "463:13:4"
                    }
                ],
                "canonicalName": "StrategyVHMaximizer",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 1773,
                "linearizedBaseContracts": [
                    1773,
                    7814,
                    7848,
                    7560,
                    8493,
                    8505,
                    1195,
                    613,
                    182
                ],
                "name": "StrategyVHMaximizer",
                "nameLocation": "415:19:4",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 1447,
                        "libraryName": {
                            "id": 1445,
                            "name": "Address",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8447,
                            "src": "489:7:4"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "483:26:4",
                        "typeName": {
                            "id": 1446,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "501:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        }
                    },
                    {
                        "id": 1451,
                        "libraryName": {
                            "id": 1448,
                            "name": "SafeERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8150,
                            "src": "520:9:4"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "514:27:4",
                        "typeName": {
                            "id": 1450,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 1449,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7926,
                                "src": "534:6:4"
                            },
                            "referencedDeclaration": 7926,
                            "src": "534:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                "typeString": "contract IERC20"
                            }
                        }
                    },
                    {
                        "id": 1455,
                        "libraryName": {
                            "id": 1452,
                            "name": "LibVaultConfig",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5069,
                            "src": "552:14:4"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "546:35:4",
                        "typeName": {
                            "id": 1454,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 1453,
                                "name": "VaultFees",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4970,
                                "src": "571:9:4"
                            },
                            "referencedDeclaration": 4970,
                            "src": "571:9:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultFees_$4970_storage_ptr",
                                "typeString": "struct VaultFees"
                            }
                        }
                    },
                    {
                        "id": 1459,
                        "libraryName": {
                            "id": 1456,
                            "name": "LibVaultSwaps",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5678,
                            "src": "592:13:4"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "586:34:4",
                        "typeName": {
                            "id": 1458,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 1457,
                                "name": "VaultFees",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 4970,
                                "src": "610:9:4"
                            },
                            "referencedDeclaration": 4970,
                            "src": "610:9:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VaultFees_$4970_storage_ptr",
                                "typeString": "struct VaultFees"
                            }
                        }
                    },
                    {
                        "constant": false,
                        "functionSelector": "fb1db278",
                        "id": 1461,
                        "mutability": "immutable",
                        "name": "masterchef",
                        "nameLocation": "651:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "626:35:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 1460,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "626:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "1c2b645b",
                        "id": 1464,
                        "mutability": "immutable",
                        "name": "tactic",
                        "nameLocation": "692:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "667:31:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITactic_$3636",
                            "typeString": "contract ITactic"
                        },
                        "typeName": {
                            "id": 1463,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 1462,
                                "name": "ITactic",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 3636,
                                "src": "667:7:4"
                            },
                            "referencedDeclaration": 3636,
                            "src": "667:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITactic_$3636",
                                "typeString": "contract ITactic"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "f1068454",
                        "id": 1466,
                        "mutability": "immutable",
                        "name": "pid",
                        "nameLocation": "726:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "704:25:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 1465,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "704:4:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1523,
                            "nodeType": "Block",
                            "src": "1156:759:4",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 1501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1499,
                                            "name": "masterchef",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1461,
                                            "src": "1166:10:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 1500,
                                            "name": "_masterchefAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1473,
                                            "src": "1179:18:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1166:31:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 1502,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1166:31:4"
                                },
                                {
                                    "expression": {
                                        "id": 1507,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1503,
                                            "name": "tactic",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1464,
                                            "src": "1207:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITactic_$3636",
                                                "typeString": "contract ITactic"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 1505,
                                                    "name": "_tacticAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1475,
                                                    "src": "1224:14:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 1504,
                                                "name": "ITactic",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3636,
                                                "src": "1216:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ITactic_$3636_$",
                                                    "typeString": "type(contract ITactic)"
                                                }
                                            },
                                            "id": 1506,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1216:23:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ITactic_$3636",
                                                "typeString": "contract ITactic"
                                            }
                                        },
                                        "src": "1207:32:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                            "typeString": "contract ITactic"
                                        }
                                    },
                                    "id": 1508,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1207:32:4"
                                },
                                {
                                    "expression": {
                                        "id": 1511,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1509,
                                            "name": "pid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1466,
                                            "src": "1249:3:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 1510,
                                            "name": "_pid",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1477,
                                            "src": "1255:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1249:10:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 1512,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1249:10:4"
                                },
                                {
                                    "expression": {
                                        "id": 1517,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1513,
                                            "name": "crystlCompounder",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 638,
                                            "src": "1269:16:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IStrategy_$3592",
                                                "typeString": "contract IStrategy"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 1515,
                                                    "name": "_crystlCompounder",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1486,
                                                    "src": "1298:17:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 1514,
                                                "name": "IStrategy",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3592,
                                                "src": "1288:9:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_IStrategy_$3592_$",
                                                    "typeString": "type(contract IStrategy)"
                                                }
                                            },
                                            "id": 1516,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1288:28:4",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IStrategy_$3592",
                                                "typeString": "contract IStrategy"
                                            }
                                        },
                                        "src": "1269:47:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$3592",
                                            "typeString": "contract IStrategy"
                                        }
                                    },
                                    "id": 1518,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1269:47:4"
                                },
                                {
                                    "expression": {
                                        "id": 1521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1519,
                                            "name": "isMaximizer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 642,
                                            "src": "1890:11:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 1520,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1904:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "1890:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1522,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1890:18:4"
                                }
                            ]
                        },
                        "id": 1524,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 1489,
                                        "name": "_settings",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1480,
                                        "src": "1037:9:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultSettings_$4957_memory_ptr",
                                            "typeString": "struct VaultSettings memory"
                                        }
                                    }
                                ],
                                "id": 1490,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1488,
                                    "name": "BaseStrategy",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 182,
                                    "src": "1024:12:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1024:23:4"
                            },
                            {
                                "arguments": [
                                    {
                                        "id": 1492,
                                        "name": "_wantToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1469,
                                        "src": "1078:10:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    {
                                        "id": 1493,
                                        "name": "_earned",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1484,
                                        "src": "1090:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$7926_$dyn_memory_ptr",
                                            "typeString": "contract IERC20[] memory"
                                        }
                                    }
                                ],
                                "id": 1494,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1491,
                                    "name": "BaseStrategySwapLogic",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 613,
                                    "src": "1056:21:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1056:42:4"
                            },
                            {
                                "arguments": [
                                    {
                                        "id": 1496,
                                        "name": "_vaultHealerAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1471,
                                        "src": "1131:19:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 1497,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1495,
                                    "name": "BaseStrategyVaultHealer",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1195,
                                    "src": "1107:23:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1107:44:4"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1487,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1469,
                                    "mutability": "mutable",
                                    "name": "_wantToken",
                                    "nameLocation": "764:10:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "757:17:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$7926",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 1468,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 1467,
                                            "name": "IERC20",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 7926,
                                            "src": "757:6:4"
                                        },
                                        "referencedDeclaration": 7926,
                                        "src": "757:6:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1471,
                                    "mutability": "mutable",
                                    "name": "_vaultHealerAddress",
                                    "nameLocation": "792:19:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "784:27:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1470,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "784:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1473,
                                    "mutability": "mutable",
                                    "name": "_masterchefAddress",
                                    "nameLocation": "829:18:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "821:26:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1472,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "821:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1475,
                                    "mutability": "mutable",
                                    "name": "_tacticAddress",
                                    "nameLocation": "865:14:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "857:22:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1474,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "857:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1477,
                                    "mutability": "mutable",
                                    "name": "_pid",
                                    "nameLocation": "897:4:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "889:12:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1476,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "889:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1480,
                                    "mutability": "mutable",
                                    "name": "_settings",
                                    "nameLocation": "932:9:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "911:30:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_VaultSettings_$4957_memory_ptr",
                                        "typeString": "struct VaultSettings"
                                    },
                                    "typeName": {
                                        "id": 1479,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 1478,
                                            "name": "VaultSettings",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 4957,
                                            "src": "911:13:4"
                                        },
                                        "referencedDeclaration": 4957,
                                        "src": "911:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_VaultSettings_$4957_storage_ptr",
                                            "typeString": "struct VaultSettings"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1484,
                                    "mutability": "mutable",
                                    "name": "_earned",
                                    "nameLocation": "967:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "951:23:4",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$7926_$dyn_memory_ptr",
                                        "typeString": "contract IERC20[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 1482,
                                            "nodeType": "UserDefinedTypeName",
                                            "pathNode": {
                                                "id": 1481,
                                                "name": "IERC20",
                                                "nodeType": "IdentifierPath",
                                                "referencedDeclaration": 7926,
                                                "src": "951:6:4"
                                            },
                                            "referencedDeclaration": 7926,
                                            "src": "951:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "id": 1483,
                                        "nodeType": "ArrayTypeName",
                                        "src": "951:8:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$7926_$dyn_storage_ptr",
                                            "typeString": "contract IERC20[]"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1486,
                                    "mutability": "mutable",
                                    "name": "_crystlCompounder",
                                    "nameLocation": "992:17:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1524,
                                    "src": "984:25:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1485,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "984:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "747:268:4"
                        },
                        "returnParameters": {
                            "id": 1498,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1156:0:4"
                        },
                        "scope": 1773,
                        "src": "736:1179:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            561
                        ],
                        "body": {
                            "id": 1661,
                            "nodeType": "Block",
                            "src": "1987:1722:4",
                            "statements": [
                                {
                                    "assignments": [
                                        1533
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1533,
                                            "mutability": "mutable",
                                            "name": "wantBalanceBefore",
                                            "nameLocation": "2002:17:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1661,
                                            "src": "1997:22:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1532,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1997:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1536,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 1534,
                                            "name": "_wantBalance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                425
                                            ],
                                            "referencedDeclaration": 425,
                                            "src": "2022:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 1535,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2022:14:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1997:39:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 1537,
                                            "name": "_vaultHarvest",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1751
                                            ],
                                            "referencedDeclaration": 1751,
                                            "src": "2093:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 1538,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2093:15:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1539,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2093:15:4"
                                },
                                {
                                    "assignments": [
                                        1541
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1541,
                                            "mutability": "mutable",
                                            "name": "dust",
                                            "nameLocation": "2147:4:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1661,
                                            "src": "2142:9:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 1540,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2142:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1544,
                                    "initialValue": {
                                        "expression": {
                                            "id": 1542,
                                            "name": "settings",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9,
                                            "src": "2154:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_VaultSettings_$4957_storage",
                                                "typeString": "struct VaultSettings storage ref"
                                            }
                                        },
                                        "id": 1543,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "dust",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 4951,
                                        "src": "2154:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint88",
                                            "typeString": "uint88"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2142:25:4"
                                },
                                {
                                    "assignments": [
                                        1546
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1546,
                                            "mutability": "mutable",
                                            "name": "success",
                                            "nameLocation": "2238:7:4",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1661,
                                            "src": "2233:12:4",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "typeName": {
                                                "id": 1545,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2233:4:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1547,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2233:12:4"
                                },
                                {
                                    "body": {
                                        "id": 1617,
                                        "nodeType": "Block",
                                        "src": "2292:829:4",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    1559
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 1559,
                                                        "mutability": "mutable",
                                                        "name": "earnedToken",
                                                        "nameLocation": "2368:11:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 1617,
                                                        "src": "2361:18:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                            "typeString": "contract IERC20"
                                                        },
                                                        "typeName": {
                                                            "id": 1558,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 1557,
                                                                "name": "IERC20",
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 7926,
                                                                "src": "2361:6:4"
                                                            },
                                                            "referencedDeclaration": 7926,
                                                            "src": "2361:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 1563,
                                                "initialValue": {
                                                    "baseExpression": {
                                                        "id": 1560,
                                                        "name": "earned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 221,
                                                        "src": "2382:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_contract$_IERC20_$7926_$8_storage",
                                                            "typeString": "contract IERC20[8] storage ref"
                                                        }
                                                    },
                                                    "id": 1562,
                                                    "indexExpression": {
                                                        "id": 1561,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1549,
                                                        "src": "2389:1:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2382:9:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$7926",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2361:30:4"
                                            },
                                            {
                                                "assignments": [
                                                    1565
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 1565,
                                                        "mutability": "mutable",
                                                        "name": "earnedAmt",
                                                        "nameLocation": "2413:9:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 1617,
                                                        "src": "2405:17:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 1564,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2405:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 1573,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 1570,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "2455:4:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                        "typeString": "contract StrategyVHMaximizer"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                        "typeString": "contract StrategyVHMaximizer"
                                                                    }
                                                                ],
                                                                "id": 1569,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "2447:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1568,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "2447:7:4",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1571,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2447:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1566,
                                                            "name": "earnedToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1559,
                                                            "src": "2425:11:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "id": 1567,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 7865,
                                                        "src": "2425:21:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1572,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2425:36:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2405:56:4"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_contract$_IERC20_$7926",
                                                        "typeString": "contract IERC20"
                                                    },
                                                    "id": 1576,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 1574,
                                                        "name": "earnedToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1559,
                                                        "src": "2490:11:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                        "id": 1575,
                                                        "name": "wantToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 212,
                                                        "src": "2505:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                            "typeString": "contract IERC20"
                                                        }
                                                    },
                                                    "src": "2490:24:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 1581,
                                                "nodeType": "IfStatement",
                                                "src": "2486:76:4",
                                                "trueBody": {
                                                    "expression": {
                                                        "id": 1579,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                            "id": 1577,
                                                            "name": "earnedAmt",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1565,
                                                            "src": "2532:9:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "-=",
                                                        "rightHandSide": {
                                                            "id": 1578,
                                                            "name": "wantBalanceBefore",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1533,
                                                            "src": "2545:17:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "2532:30:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "id": 1580,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "2532:30:4"
                                                }
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 1584,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 1582,
                                                        "name": "earnedAmt",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1565,
                                                        "src": "2631:9:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": ">",
                                                    "rightExpression": {
                                                        "id": 1583,
                                                        "name": "dust",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1541,
                                                        "src": "2643:4:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "2631:16:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 1616,
                                                "nodeType": "IfStatement",
                                                "src": "2627:484:4",
                                                "trueBody": {
                                                    "id": 1615,
                                                    "nodeType": "Block",
                                                    "src": "2649:462:4",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "id": 1587,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 1585,
                                                                    "name": "success",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1546,
                                                                    "src": "2667:7:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "hexValue": "74727565",
                                                                    "id": 1586,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "bool",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2677:4:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                    },
                                                                    "value": "true"
                                                                },
                                                                "src": "2667:14:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 1588,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2667:14:4"
                                                        },
                                                        {
                                                            "expression": {
                                                                "id": 1598,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                    "id": 1589,
                                                                    "name": "earnedAmt",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 1565,
                                                                    "src": "2737:9:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                    "arguments": [
                                                                        {
                                                                            "id": 1592,
                                                                            "name": "settings",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 9,
                                                                            "src": "2770:8:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_VaultSettings_$4957_storage",
                                                                                "typeString": "struct VaultSettings storage ref"
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 1593,
                                                                            "name": "vaultStats",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 232,
                                                                            "src": "2780:10:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_VaultStats_$5088_storage",
                                                                                "typeString": "struct LibVaultSwaps.VaultStats storage ref"
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 1594,
                                                                            "name": "earnedToken",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1559,
                                                                            "src": "2792:11:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                                "typeString": "contract IERC20"
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 1595,
                                                                            "name": "earnedAmt",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1565,
                                                                            "src": "2805:9:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        {
                                                                            "id": 1596,
                                                                            "name": "_to",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 1526,
                                                                            "src": "2816:3:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_struct$_VaultSettings_$4957_storage",
                                                                                "typeString": "struct VaultSettings storage ref"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_struct$_VaultStats_$5088_storage",
                                                                                "typeString": "struct LibVaultSwaps.VaultStats storage ref"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                                "typeString": "contract IERC20"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            },
                                                                            {
                                                                                "typeIdentifier": "t_address",
                                                                                "typeString": "address"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 1590,
                                                                            "name": "vaultFees",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 229,
                                                                            "src": "2749:9:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_VaultFees_$4970_storage",
                                                                                "typeString": "struct VaultFees storage ref"
                                                                            }
                                                                        },
                                                                        "id": 1591,
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberName": "distribute",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 5266,
                                                                        "src": "2749:20:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_VaultFees_$4970_storage_ptr_$_t_struct$_VaultSettings_$4957_storage_ptr_$_t_struct$_VaultStats_$5088_storage_ptr_$_t_contract$_IERC20_$7926_$_t_uint256_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_VaultFees_$4970_storage_ptr_$",
                                                                            "typeString": "function (struct VaultFees storage pointer,struct VaultSettings storage pointer,struct LibVaultSwaps.VaultStats storage pointer,contract IERC20,uint256,address) returns (uint256)"
                                                                        }
                                                                    },
                                                                    "id": 1597,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "2749:71:4",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "2737:83:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "id": 1599,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2737:83:4"
                                                        },
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "id": 1603,
                                                                        "name": "settings",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 9,
                                                                        "src": "2958:8:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_VaultSettings_$4957_storage",
                                                                            "typeString": "struct VaultSettings storage ref"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": 1604,
                                                                        "name": "earnedAmt",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1565,
                                                                        "src": "2968:9:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    {
                                                                        "id": 1605,
                                                                        "name": "earnedToken",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 1559,
                                                                        "src": "2979:11:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    },
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "hexValue": "307837366246304332386536303443433366453939363763383362334333463331633231336366453634",
                                                                                "id": 1607,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "2999:42:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                },
                                                                                "value": "0x76bF0C28e604CC3fE9967c83b3C3F31c213cfE64"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_address",
                                                                                    "typeString": "address"
                                                                                }
                                                                            ],
                                                                            "id": 1606,
                                                                            "name": "IERC20",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 7926,
                                                                            "src": "2992:6:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$7926_$",
                                                                                "typeString": "type(contract IERC20)"
                                                                            }
                                                                        },
                                                                        "id": 1608,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "2992:50:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                            "typeString": "contract IERC20"
                                                                        }
                                                                    },
                                                                    {
                                                                        "arguments": [
                                                                            {
                                                                                "id": 1611,
                                                                                "name": "this",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 4294967268,
                                                                                "src": "3052:4:4",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                                    "typeString": "contract StrategyVHMaximizer"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "argumentTypes": [
                                                                                {
                                                                                    "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                                    "typeString": "contract StrategyVHMaximizer"
                                                                                }
                                                                            ],
                                                                            "id": 1610,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "ElementaryTypeNameExpression",
                                                                            "src": "3044:7:4",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                                "typeString": "type(address)"
                                                                            },
                                                                            "typeName": {
                                                                                "id": 1609,
                                                                                "name": "address",
                                                                                "nodeType": "ElementaryTypeName",
                                                                                "src": "3044:7:4",
                                                                                "typeDescriptions": {}
                                                                            }
                                                                        },
                                                                        "id": 1612,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "kind": "typeConversion",
                                                                        "lValueRequested": false,
                                                                        "names": [],
                                                                        "nodeType": "FunctionCall",
                                                                        "src": "3044:13:4",
                                                                        "tryCall": false,
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_struct$_VaultSettings_$4957_storage",
                                                                            "typeString": "struct VaultSettings storage ref"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                            "typeString": "contract IERC20"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                            "typeString": "contract IERC20"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 1600,
                                                                        "name": "LibVaultSwaps",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 5678,
                                                                        "src": "2935:13:4",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_type$_t_contract$_LibVaultSwaps_$5678_$",
                                                                            "typeString": "type(library LibVaultSwaps)"
                                                                        }
                                                                    },
                                                                    "id": 1602,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "safeSwap",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 5495,
                                                                    "src": "2935:22:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_VaultSettings_$4957_storage_ptr_$_t_uint256_$_t_contract$_IERC20_$7926_$_t_contract$_IERC20_$7926_$_t_address_$returns$__$",
                                                                        "typeString": "function (struct VaultSettings storage pointer,uint256,contract IERC20,contract IERC20,address)"
                                                                    }
                                                                },
                                                                "id": 1613,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2935:123:4",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 1614,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2935:123:4"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 1553,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 1551,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1549,
                                            "src": "2269:1:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "id": 1552,
                                            "name": "earnedLength",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 214,
                                            "src": "2273:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2269:16:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1618,
                                    "initializationExpression": {
                                        "assignments": [
                                            1549
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 1549,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "2266:1:4",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 1618,
                                                "src": "2261:6:4",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 1548,
                                                    "name": "uint",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2261:4:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 1550,
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "2261:6:4"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 1555,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "2287:3:4",
                                            "subExpression": {
                                                "id": 1554,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1549,
                                                "src": "2287:1:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 1556,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2287:3:4"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "2256:865:4"
                                },
                                {
                                    "condition": {
                                        "id": 1619,
                                        "name": "success",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1546,
                                        "src": "3135:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1655,
                                    "nodeType": "IfStatement",
                                    "src": "3131:534:4",
                                    "trueBody": {
                                        "id": 1654,
                                        "nodeType": "Block",
                                        "src": "3144:521:4",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    1622
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 1622,
                                                        "mutability": "mutable",
                                                        "name": "crystlToken",
                                                        "nameLocation": "3246:11:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 1654,
                                                        "src": "3239:18:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IERC20_$7926",
                                                            "typeString": "contract IERC20"
                                                        },
                                                        "typeName": {
                                                            "id": 1621,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 1620,
                                                                "name": "IERC20",
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 7926,
                                                                "src": "3239:6:4"
                                                            },
                                                            "referencedDeclaration": 7926,
                                                            "src": "3239:6:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 1626,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "307837366246304332386536303443433366453939363763383362334333463331633231336366453634",
                                                            "id": 1624,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3267:42:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            "value": "0x76bF0C28e604CC3fE9967c83b3C3F31c213cfE64"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 1623,
                                                        "name": "IERC20",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 7926,
                                                        "src": "3260:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$7926_$",
                                                            "typeString": "type(contract IERC20)"
                                                        }
                                                    },
                                                    "id": 1625,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3260:50:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$7926",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3239:71:4"
                                            },
                                            {
                                                "assignments": [
                                                    1628
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 1628,
                                                        "mutability": "mutable",
                                                        "name": "crystlBalance",
                                                        "nameLocation": "3370:13:4",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 1654,
                                                        "src": "3362:21:4",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 1627,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "3362:7:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 1636,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 1633,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "3416:4:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                        "typeString": "contract StrategyVHMaximizer"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_StrategyVHMaximizer_$1773",
                                                                        "typeString": "contract StrategyVHMaximizer"
                                                                    }
                                                                ],
                                                                "id": 1632,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3408:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1631,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3408:7:4",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1634,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3408:13:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1629,
                                                            "name": "crystlToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1622,
                                                            "src": "3386:11:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "id": 1630,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 7865,
                                                        "src": "3386:21:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 1635,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3386:36:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "3362:60:4"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 1642,
                                                                    "name": "vaultHealer",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 635,
                                                                    "src": "3514:11:4",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_VaultHealer_$1827",
                                                                        "typeString": "contract VaultHealer"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_VaultHealer_$1827",
                                                                        "typeString": "contract VaultHealer"
                                                                    }
                                                                ],
                                                                "id": 1641,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "3506:7:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 1640,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "3506:7:4",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 1643,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "3506:20:4",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 1644,
                                                            "name": "crystlBalance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1628,
                                                            "src": "3528:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1637,
                                                            "name": "crystlToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1622,
                                                            "src": "3482:11:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_IERC20_$7926",
                                                                "typeString": "contract IERC20"
                                                            }
                                                        },
                                                        "id": 1639,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "safeApprove",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 8027,
                                                        "src": "3482:23:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7926_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7926_$",
                                                            "typeString": "function (contract IERC20,address,uint256)"
                                                        }
                                                    },
                                                    "id": 1645,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3482:60:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 1646,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3482:60:4"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "33",
                                                            "id": 1650,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "3577:1:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_3_by_1",
                                                                "typeString": "int_const 3"
                                                            },
                                                            "value": "3"
                                                        },
                                                        {
                                                            "id": 1651,
                                                            "name": "crystlBalance",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1628,
                                                            "src": "3580:13:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_3_by_1",
                                                                "typeString": "int_const 3"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 1647,
                                                            "name": "vaultHealer",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 635,
                                                            "src": "3557:11:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_VaultHealer_$1827",
                                                                "typeString": "contract VaultHealer"
                                                            }
                                                        },
                                                        "id": 1649,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "deposit",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2729,
                                                        "src": "3557:19:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                                            "typeString": "function (uint256,uint256) external"
                                                        }
                                                    },
                                                    "id": 1652,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3557:37:4",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 1653,
                                                "nodeType": "ExpressionStatement",
                                                "src": "3557:37:4"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "id": 1659,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1656,
                                            "name": "lastEarnBlock",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 13,
                                            "src": "3674:13:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 1657,
                                                "name": "block",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967292,
                                                "src": "3690:5:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                }
                                            },
                                            "id": 1658,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "number",
                                            "nodeType": "MemberAccess",
                                            "src": "3690:12:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "3674:28:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 1660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3674:28:4"
                                }
                            ]
                        },
                        "id": 1662,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 1530,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 1529,
                                    "name": "whenEarnIsReady",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 369,
                                    "src": "1971:15:4"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1971:15:4"
                            }
                        ],
                        "name": "_earn",
                        "nameLocation": "1934:5:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1528,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1962:8:4"
                        },
                        "parameters": {
                            "id": 1527,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1526,
                                    "mutability": "mutable",
                                    "name": "_to",
                                    "nameLocation": "1948:3:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1662,
                                    "src": "1940:11:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1525,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1940:7:4",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1939:13:4"
                        },
                        "returnParameters": {
                            "id": 1531,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1987:0:4"
                        },
                        "scope": 1773,
                        "src": "1925:1784:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            50
                        ],
                        "body": {
                            "id": 1674,
                            "nodeType": "Block",
                            "src": "3786:64:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1670,
                                                "name": "masterchef",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1461,
                                                "src": "3827:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1671,
                                                "name": "pid",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1466,
                                                "src": "3839:3:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1668,
                                                "name": "tactic",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1464,
                                                "src": "3803:6:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ITactic_$3636",
                                                    "typeString": "contract ITactic"
                                                }
                                            },
                                            "id": 1669,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "vaultSharesTotal",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 3628,
                                            "src": "3803:23:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (address,uint256) view external returns (uint256)"
                                            }
                                        },
                                        "id": 1672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3803:40:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 1667,
                                    "id": 1673,
                                    "nodeType": "Return",
                                    "src": "3796:47:4"
                                }
                            ]
                        },
                        "functionSelector": "04c9d490",
                        "id": 1675,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "vaultSharesTotal",
                        "nameLocation": "3728:16:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1664,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3754:8:4"
                        },
                        "parameters": {
                            "id": 1663,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3744:2:4"
                        },
                        "returnParameters": {
                            "id": 1667,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1666,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1675,
                                    "src": "3777:7:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1665,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3777:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3776:9:4"
                        },
                        "scope": 1773,
                        "src": "3719:131:4",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            55
                        ],
                        "body": {
                            "id": 1705,
                            "nodeType": "Block",
                            "src": "3918:339:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1684,
                                                "name": "masterchef",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1461,
                                                "src": "4049:10:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1685,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1677,
                                                "src": "4061:7:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1681,
                                                "name": "wantToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 212,
                                                "src": "4017:9:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$7926",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 1683,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "safeIncreaseAllowance",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8063,
                                            "src": "4017:31:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$7926_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$7926_$",
                                                "typeString": "function (contract IERC20,address,uint256)"
                                            }
                                        },
                                        "id": 1686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4017:52:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1687,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4017:52:4"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "expression": {
                                                                "id": 1695,
                                                                "name": "tactic",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1464,
                                                                "src": "4161:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_ITactic_$3636",
                                                                    "typeString": "contract ITactic"
                                                                }
                                                            },
                                                            "id": 1696,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "_vaultDeposit",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3603,
                                                            "src": "4161:20:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                                "typeString": "function (address,uint256,uint256) external"
                                                            }
                                                        },
                                                        "id": 1697,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4161:29:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        }
                                                    },
                                                    {
                                                        "id": 1698,
                                                        "name": "masterchef",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1461,
                                                        "src": "4192:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1699,
                                                        "name": "pid",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1466,
                                                        "src": "4204:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 1700,
                                                        "name": "_amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1677,
                                                        "src": "4209:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1693,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "4125:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 1694,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodeWithSelector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4125:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 1701,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4125:101:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            {
                                                "hexValue": "7661756c746465706f736974206661696c6564",
                                                "id": 1702,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4228:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_826ea04f4472f25b4808f5affe6cc959e58df0c486f0928d0fedd78c9bb47405",
                                                    "typeString": "literal_string \"vaultdeposit failed\""
                                                },
                                                "value": "vaultdeposit failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_826ea04f4472f25b4808f5affe6cc959e58df0c486f0928d0fedd78c9bb47405",
                                                    "typeString": "literal_string \"vaultdeposit failed\""
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1690,
                                                        "name": "tactic",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1464,
                                                        "src": "4096:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    ],
                                                    "id": 1689,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4088:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1688,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4088:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1691,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4088:15:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 1692,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "functionDelegateCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8415,
                                            "src": "4088:36:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                                                "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                                            }
                                        },
                                        "id": 1703,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4088:162:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "id": 1704,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4088:162:4"
                                }
                            ]
                        },
                        "id": 1706,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_vaultDeposit",
                        "nameLocation": "3869:13:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1679,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3909:8:4"
                        },
                        "parameters": {
                            "id": 1678,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1677,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "3891:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1706,
                                    "src": "3883:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1676,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3883:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3882:17:4"
                        },
                        "returnParameters": {
                            "id": 1680,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3918:0:4"
                        },
                        "scope": 1773,
                        "src": "3860:397:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            60
                        ],
                        "body": {
                            "id": 1729,
                            "nodeType": "Block",
                            "src": "4326:181:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "expression": {
                                                                "id": 1719,
                                                                "name": "tactic",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1464,
                                                                "src": "4409:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_ITactic_$3636",
                                                                    "typeString": "contract ITactic"
                                                                }
                                                            },
                                                            "id": 1720,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "_vaultWithdraw",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3612,
                                                            "src": "4409:21:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                                "typeString": "function (address,uint256,uint256) external"
                                                            }
                                                        },
                                                        "id": 1721,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4409:30:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        }
                                                    },
                                                    {
                                                        "id": 1722,
                                                        "name": "masterchef",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1461,
                                                        "src": "4441:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1723,
                                                        "name": "pid",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1466,
                                                        "src": "4453:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    {
                                                        "id": 1724,
                                                        "name": "_amount",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1708,
                                                        "src": "4458:7:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1717,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "4373:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 1718,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodeWithSelector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4373:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 1725,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4373:102:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            {
                                                "hexValue": "7661756c747769746864726177206661696c6564",
                                                "id": 1726,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4477:22:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_52f2e627464e3c90ce25306da7a2a072be41f2c1b7325c682ef01503502968f3",
                                                    "typeString": "literal_string \"vaultwithdraw failed\""
                                                },
                                                "value": "vaultwithdraw failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_52f2e627464e3c90ce25306da7a2a072be41f2c1b7325c682ef01503502968f3",
                                                    "typeString": "literal_string \"vaultwithdraw failed\""
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1714,
                                                        "name": "tactic",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1464,
                                                        "src": "4344:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    ],
                                                    "id": 1713,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4336:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1712,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4336:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1715,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4336:15:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 1716,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "functionDelegateCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8415,
                                            "src": "4336:36:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                                                "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                                            }
                                        },
                                        "id": 1727,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4336:164:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "id": 1728,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4336:164:4"
                                }
                            ]
                        },
                        "id": 1730,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_vaultWithdraw",
                        "nameLocation": "4276:14:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1710,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4317:8:4"
                        },
                        "parameters": {
                            "id": 1709,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1708,
                                    "mutability": "mutable",
                                    "name": "_amount",
                                    "nameLocation": "4299:7:4",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1730,
                                    "src": "4291:15:4",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1707,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4291:7:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4290:17:4"
                        },
                        "returnParameters": {
                            "id": 1711,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4326:0:4"
                        },
                        "scope": 1773,
                        "src": "4267:240:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            63
                        ],
                        "body": {
                            "id": 1750,
                            "nodeType": "Block",
                            "src": "4560:170:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "expression": {
                                                                "id": 1741,
                                                                "name": "tactic",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1464,
                                                                "src": "4643:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_ITactic_$3636",
                                                                    "typeString": "contract ITactic"
                                                                }
                                                            },
                                                            "id": 1742,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "_vaultHarvest",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3619,
                                                            "src": "4643:20:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                "typeString": "function (address,uint256) external"
                                                            }
                                                        },
                                                        "id": 1743,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4643:29:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        }
                                                    },
                                                    {
                                                        "id": 1744,
                                                        "name": "masterchef",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1461,
                                                        "src": "4674:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1745,
                                                        "name": "pid",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1466,
                                                        "src": "4686:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1739,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "4607:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 1740,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodeWithSelector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4607:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 1746,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4607:92:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            {
                                                "hexValue": "7661756c7468617276657374206661696c6564",
                                                "id": 1747,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4701:21:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_3c82a1f32fcbce4c9df121a22234468adee32479c63f0518d36a18a6151803f0",
                                                    "typeString": "literal_string \"vaultharvest failed\""
                                                },
                                                "value": "vaultharvest failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_3c82a1f32fcbce4c9df121a22234468adee32479c63f0518d36a18a6151803f0",
                                                    "typeString": "literal_string \"vaultharvest failed\""
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1736,
                                                        "name": "tactic",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1464,
                                                        "src": "4578:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    ],
                                                    "id": 1735,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4570:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1734,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4570:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1737,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4570:15:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 1738,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "functionDelegateCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8415,
                                            "src": "4570:36:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                                                "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                                            }
                                        },
                                        "id": 1748,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4570:153:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "id": 1749,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4570:153:4"
                                }
                            ]
                        },
                        "id": 1751,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_vaultHarvest",
                        "nameLocation": "4526:13:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1732,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4551:8:4"
                        },
                        "parameters": {
                            "id": 1731,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4539:2:4"
                        },
                        "returnParameters": {
                            "id": 1733,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4560:0:4"
                        },
                        "scope": 1773,
                        "src": "4517:213:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "baseFunctions": [
                            66
                        ],
                        "body": {
                            "id": 1771,
                            "nodeType": "Block",
                            "src": "4793:190:4",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "expression": {
                                                                "id": 1762,
                                                                "name": "tactic",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1464,
                                                                "src": "4876:6:4",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_ITactic_$3636",
                                                                    "typeString": "contract ITactic"
                                                                }
                                                            },
                                                            "id": 1763,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "_emergencyVaultWithdraw",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 3635,
                                                            "src": "4876:30:4",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                                "typeString": "function (address,uint256) external"
                                                            }
                                                        },
                                                        "id": 1764,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "selector",
                                                        "nodeType": "MemberAccess",
                                                        "src": "4876:39:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        }
                                                    },
                                                    {
                                                        "id": 1765,
                                                        "name": "masterchef",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1461,
                                                        "src": "4917:10:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    {
                                                        "id": 1766,
                                                        "name": "pid",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1466,
                                                        "src": "4929:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bytes4",
                                                            "typeString": "bytes4"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "id": 1760,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "4840:3:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_abi",
                                                            "typeString": "abi"
                                                        }
                                                    },
                                                    "id": 1761,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberName": "encodeWithSelector",
                                                    "nodeType": "MemberAccess",
                                                    "src": "4840:22:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                                    }
                                                },
                                                "id": 1767,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4840:102:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            },
                                            {
                                                "hexValue": "656d657267656e63797661756c747769746864726177206661696c6564",
                                                "id": 1768,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4944:31:4",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_082b501f69adebb36604489e6bdcdbb1b62c349b68dbd170d47dd9b773aa3e06",
                                                    "typeString": "literal_string \"emergencyvaultwithdraw failed\""
                                                },
                                                "value": "emergencyvaultwithdraw failed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_082b501f69adebb36604489e6bdcdbb1b62c349b68dbd170d47dd9b773aa3e06",
                                                    "typeString": "literal_string \"emergencyvaultwithdraw failed\""
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 1757,
                                                        "name": "tactic",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1464,
                                                        "src": "4811:6:4",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_ITactic_$3636",
                                                            "typeString": "contract ITactic"
                                                        }
                                                    ],
                                                    "id": 1756,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "4803:7:4",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1755,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "4803:7:4",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1758,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4803:15:4",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 1759,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "functionDelegateCall",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 8415,
                                            "src": "4803:36:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                                                "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                                            }
                                        },
                                        "id": 1769,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4803:173:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                        }
                                    },
                                    "id": 1770,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4803:173:4"
                                }
                            ]
                        },
                        "id": 1772,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_emergencyVaultWithdraw",
                        "nameLocation": "4749:23:4",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1753,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4784:8:4"
                        },
                        "parameters": {
                            "id": 1752,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4772:2:4"
                        },
                        "returnParameters": {
                            "id": 1754,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4793:0:4"
                        },
                        "scope": 1773,
                        "src": "4740:243:4",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "scope": 1774,
                "src": "406:4588:4",
                "usedErrors": []
            }
        ],
        "src": "45:4949:4"
    },
    "functionHashes": {
        "CheckIsMaximizer()": "c621fbc3",
        "UpdatePoolAndRewarddebtOnDeposit(address,uint256)": "5ad88a70",
        "UpdatePoolAndWithdrawCrystlOnWithdrawal(address,uint256,uint256)": "52a49ba2",
        "accRewardTokensPerShare()": "0e442709",
        "burnedAmount()": "50e15fdd",
        "buyBackRate()": "178a8d07",
        "crystlCompounder()": "dfdce164",
        "deposit(address,address,uint256,uint256)": "20e8c565",
        "earn(address)": "fdb5fefc",
        "earned(uint256)": "4d6ed8c4",
        "getRewardDebt(address)": "1d47c6d9",
        "increaseRewardDebt(address,uint256)": "f75c1d9e",
        "isMaximizer()": "96ae71f0",
        "lastEarnBlock()": "0fa4e01e",
        "lpToken(uint256)": "78ed5d1f",
        "masterchef()": "fb1db278",
        "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
        "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
        "panic()": "4700d305",
        "panicLockExpiry()": "9845db2f",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "pid()": "f1068454",
        "rewardDebt(address)": "5873eb9b",
        "setFees(((address,address,uint16),(address,address,uint16),(address,address,uint16),(address,address,uint16)))": "c0c5356a",
        "setSettings((address,uint16,uint16,uint64,uint88,bool,address))": "b9bafd93",
        "setStakingPoolAddress(address)": "203d81c1",
        "settings()": "e06174e4",
        "sharesTotal()": "44a3955e",
        "stakingPoolAddress()": "25b15a0c",
        "supportsInterface(bytes4)": "01ffc9a7",
        "tactic()": "1c2b645b",
        "tolerance()": "dce52dfa",
        "unpanic()": "65a5e30b",
        "unpause()": "3f4ba83a",
        "vaultFees()": "72188e3f",
        "vaultHealer()": "7e2c5c19",
        "vaultSharesTotal()": "04c9d490",
        "vaultStats()": "6ff4ab8a",
        "wantLockedTotal()": "42da4eb3",
        "wantToken()": "d23e0480",
        "withdraw(address,address,uint256,uint256,uint256)": "76234759"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "3210600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "CheckIsMaximizer()": "2377",
            "UpdatePoolAndRewarddebtOnDeposit(address,uint256)": "infinite",
            "UpdatePoolAndWithdrawCrystlOnWithdrawal(address,uint256,uint256)": "infinite",
            "accRewardTokensPerShare()": "2386",
            "burnedAmount()": "2372",
            "buyBackRate()": "2450",
            "crystlCompounder()": "2470",
            "deposit(address,address,uint256,uint256)": "infinite",
            "earn(address)": "infinite",
            "earned(uint256)": "2591",
            "getRewardDebt(address)": "2599",
            "increaseRewardDebt(address,uint256)": "24816",
            "isMaximizer()": "2383",
            "lastEarnBlock()": "2408",
            "lpToken(uint256)": "2569",
            "masterchef()": "infinite",
            "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
            "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
            "panic()": "infinite",
            "panicLockExpiry()": "2384",
            "pause()": "infinite",
            "paused()": "infinite",
            "pid()": "infinite",
            "rewardDebt(address)": "2602",
            "setFees(((address,address,uint16),(address,address,uint16),(address,address,uint16),(address,address,uint16)))": "infinite",
            "setSettings((address,uint16,uint16,uint64,uint88,bool,address))": "infinite",
            "setStakingPoolAddress(address)": "24643",
            "settings()": "4848",
            "sharesTotal()": "infinite",
            "stakingPoolAddress()": "2471",
            "supportsInterface(bytes4)": "473",
            "tactic()": "infinite",
            "tolerance()": "2426",
            "unpanic()": "infinite",
            "unpause()": "infinite",
            "vaultFees()": "infinite",
            "vaultHealer()": "infinite",
            "vaultSharesTotal()": "infinite",
            "vaultStats()": "2439",
            "wantLockedTotal()": "infinite",
            "wantToken()": "infinite",
            "withdraw(address,address,uint256,uint256,uint256)": "infinite"
        },
        "internal": {
            "_earn(address)": "infinite",
            "_emergencyVaultWithdraw()": "infinite",
            "_vaultDeposit(uint256)": "infinite",
            "_vaultHarvest()": "infinite",
            "_vaultWithdraw(uint256)": "infinite"
        }
    }
}